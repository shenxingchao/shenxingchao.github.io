{"version":3,"sources":["webpack:///./src/components/ComponentTree.vue?af1d","webpack:///./src/components/ControlBar.vue?2826","webpack:///./src/components/AttributeBar.vue?bcfb","webpack:///./src/views/Index.vue?61c3","webpack:///./src/views/Index.vue","webpack:///./src/components/ControlBar.vue","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/mixins/index.ts","webpack:///./src/config/components_list.ts","webpack:///./src/components/ControlBar.vue?c6d0","webpack:///./src/components/ControlBar.vue?d82a","webpack:///./src/components/AttributeBar.vue","webpack:///./src/components/AttributeBar.vue?30e0","webpack:///./src/components/AttributeBar.vue?ebad","webpack:///./src/components/Designer.vue","webpack:///./src/components/ComponentTree.vue","webpack:///./src/components/ComponentTree.vue?e5d2","webpack:///./src/components/ComponentTree.vue?d997","webpack:///./src/components/ToolBar.vue","webpack:///./src/components/ToolBar.vue?46b2","webpack:///./src/components/ToolBar.vue?ddc9","webpack:///./src/components/Designer.vue?756d","webpack:///./src/components/Designer.vue?235d","webpack:///./src/views/Index.vue?7ba6","webpack:///./src/views/Index.vue?4e3d","webpack:///./src/components/ToolBar.vue?fac4"],"names":["class","width","style","handleDragEnterContrlList","default-openeds","unique-opened","components_list","components","index","title","name","icon","className","type","children","component","i","draggable","handleDragStart","$event","__assign","Object","assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","mixins","_handleRecursionDelete","id","component_tree_list","flag","splice","_handleRecursionGetParentNode","node","parent_node","item","_handleRecursionGetNodeByNodeId","find_node","_generateCode","html","level","forEach","element","repeat_space","repeat","start_tag","key","model","props","prop","toString","text","temp_level","direction","gutter","justify","align","span","offset","push","pull","size","plain","round","circle","loading","disabled","autofocus","ref","inline","label","required","value","maxlength","minlength","placeholder","clearable","rows","autosize","readonly","resize","max","min","step","precision","controls","multiple","filterable","format","editable","setup","store","data","e","Date","getTime","dataTransfer","setData","JSON","stringify","state","render","__scopeId","tab_active_name","node_info","attribute","label-width","handleClickDeleteRadioItem","handleClickAddRadioItem","handleClickDeleteCheckBoxItem","handleClickAddCheckBoxItem","handleClickDeleteSelectItem","handleClickAddSelectItem","val","tree","defaultProps","render-after-expand","highlight-current","node-key","indent","default-expand-all","expand-on-click-node","handleClickTreeNode","handleMouseOverTreeNode","handleMouseOutTreeNode","get","current_node_info","set","a","b","border","document","getElementsByClassName","replace","node_element","getElementById","deep","radio","dispatch","contenteditable","handleChangeDesigner","handleClearLayout","handleDeleteControl","tab_index","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","handleClick","code","handleShowBorder","handleDragEnterOnNode","handleDragOverOnNode","handleDropOnNode","start-placeholder","end-placeholder","range-separator","Array","default","internalInstance","appContext","config","globalProperties","sotre_component_tree_list","show_border","block_node","parse","getData","white_list","includes","recursionFindNodeId","target","parentElement","target_id","parentNode","xs","sm","md","lg","effect","content","placement","handleClickToolBtn","emits","emit","show_tips","setTimeout","ComponentTree","ToolBar","insert_index","onkeydown","event","window","callee","caller","keyCode","ctrlKey","handleCopyControl","handlePasteControl","preventDefault","flag_position","ele","clientY","offsetTop","offsetHeight","keys","copy_node_info","ControlBar","AttributeBar","Designer","router","route"],"mappings":"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","file":"js/chunk-63e40dce.2e1c62ef.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ComponentTree.vue?vue&type=style&index=0&id=22b6f52c&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ControlBar.vue?vue&type=style&index=0&id=2407aec1&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AttributeBar.vue?vue&type=style&index=0&id=fe074efa&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=1a1d33dc&lang=scss&scoped=true\"","<template>\r\n  <el-container class=\"container\">\r\n    <control-bar></control-bar>\r\n    <designer></designer>\r\n    <attribute-bar></attribute-bar>\r\n  </el-container>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport ControlBar from '@/components/ControlBar.vue'\r\nimport AttributeBar from '@/components/AttributeBar.vue'\r\nimport Designer from '@/components/Designer.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ControlBar,\r\n    AttributeBar,\r\n    Designer,\r\n  },\r\n  setup() {\r\n    //定义router\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n\r\n    return { router, route }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  height: 100%;\r\n}\r\n</style>","<template>\r\n  <el-aside width=\"240px\" style=\"background-color: rgb(238, 241, 246)\" @dragenter=\"handleDragEnterContrlList\">\r\n    <el-menu :default-openeds=\"['1']\" :unique-opened=\"true\">\r\n      <template v-for=\"(components,index) in components_list.components\" :key=\"index\">\r\n        <el-submenu :index=\"index + ''\">\r\n          <template #title>\r\n            <div class=\"icon-box\">\r\n              <svg-icon :name=\"components.icon\" className=\"icon\" />\r\n              {{components.title}}\r\n            </div>\r\n          </template>\r\n          <el-menu-item-group>\r\n            <template #title>{{components.type}}</template>\r\n            <template v-for=\"(component,i) in components.children\" :key=\"i\">\r\n              <el-menu-item :index=\"index+'-'+i\" :draggable=\"true\" @dragstart=\"handleDragStart(component,$event)\">\r\n                {{component.title}} <span class=\"en-title\">{{component.name}}</span>\r\n              </el-menu-item>\r\n            </template>\r\n          </el-menu-item-group>\r\n        </el-submenu>\r\n      </template>\r\n    </el-menu>\r\n  </el-aside>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\n//导入控件列表\r\nimport components_list from '@/config/components_list'\r\n\r\nexport default defineComponent({\r\n  name: 'ControlBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({})\r\n\r\n    //递归删除旧的占位块\r\n    const { _handleRecursionDelete } = mixins()\r\n\r\n    /**\r\n     * 控件拖动开始       console.log('1.拖动控件节点信息 handleDragStart:', component)\r\n     * @param componet 单个控件节点 包含children\r\n     */\r\n    const handleDragStart = (component: any, e: any) => {\r\n      //参考自 https://github.com/OXOYO/X-Page-Editor-Vue/blob/master/example/components/CustomListItem.vue\r\n      // 生成唯一id\r\n      component.id = 'node-' + new Date().getTime()\r\n\r\n      //如果有children children也要加唯一id\r\n      component.children.forEach((children: any) => {\r\n        children.id = 'node-' + new Date().getTime()\r\n      })\r\n\r\n      //设置拖拽数据\r\n      e.dataTransfer.setData('node', JSON.stringify(component))\r\n    }\r\n\r\n    /**\r\n     * 拖入控件栏，用于删除组件树内的占位块 console.log('7.拖入控件栏，用于删除组件树内的占位块 handleDragEnterContrlList')\r\n     */\r\n    const handleDragEnterContrlList = (e: any) => {\r\n      _handleRecursionDelete('block_node', store.state.component_tree_list)\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      components_list,\r\n      handleDragStart,\r\n      handleDragEnterContrlList,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: $h3c;\r\n}\r\n.en-title {\r\n  color: $h3c;\r\n  font-size: 12px;\r\n}\r\n</style>","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const mixins: any = () => {\r\n  //递归删除指定id的节点及其子节点\r\n  const _handleRecursionDelete: any = (\r\n    id: any,\r\n    component_tree_list: any,\r\n    flag: any = false\r\n  ) => {\r\n    for (let i = component_tree_list.length - 1; i >= 0; i--) {\r\n      //找到了节点\r\n      if (component_tree_list[i].id == id) {\r\n        //删除并返回\r\n        component_tree_list.splice(i, 1)\r\n        flag = true\r\n        break\r\n      } else {\r\n        // 继续遍历子级\r\n        if (\r\n          component_tree_list[i].children &&\r\n          component_tree_list[i].children.length > 0\r\n        ) {\r\n          flag = _handleRecursionDelete(\r\n            id,\r\n            component_tree_list[i].children,\r\n            flag\r\n          )\r\n          if (flag) {\r\n            //如果删除了，则终止递归\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag\r\n  }\r\n\r\n  //递归查找父级节点\r\n  const _handleRecursionGetParentNode: any = (\r\n    node: any,\r\n    component_tree_list: any,\r\n    parent_node: any = null\r\n  ) => {\r\n    for (const item of component_tree_list) {\r\n      if (item.id == node.id) {\r\n        parent_node = component_tree_list\r\n        break\r\n      } else {\r\n        if (item.children && item.children.length > 0) {\r\n          parent_node = _handleRecursionGetParentNode(\r\n            node,\r\n            item.children,\r\n            parent_node\r\n          )\r\n          if (parent_node) {\r\n            //如果找到了终止递归\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return parent_node\r\n  }\r\n\r\n  //递归根据节点id查找节点信息\r\n  const _handleRecursionGetNodeByNodeId: any = (\r\n    id: any,\r\n    component_tree_list: any,\r\n    find_node: null\r\n  ) => {\r\n    for (const item of component_tree_list) {\r\n      if (item.id == id) {\r\n        find_node = item\r\n        break\r\n      } else {\r\n        if (item.children && item.children.length > 0) {\r\n          find_node = _handleRecursionGetNodeByNodeId(\r\n            id,\r\n            item.children,\r\n            find_node\r\n          )\r\n          if (find_node) {\r\n            //如果找到了终止递归\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return find_node\r\n  }\r\n\r\n  const _generateCode = (\r\n    component_tree_list: any,\r\n    html: string = '',\r\n    level: number = 0\r\n  ) => {\r\n    component_tree_list.forEach((element: any) => {\r\n      let repeat_space = '' //缩进换行\r\n      if (level > 0) {\r\n        repeat_space = ' '.repeat(level * 2) //按子级嵌套层次 重复缩进\r\n      }\r\n      let start_tag = repeat_space + '<' + element.name //开始标签的左半边名称\r\n      /****这里开始添加属性****/\r\n      //model属性单独添加\r\n      if (element.model && element.model != '') {\r\n        start_tag += ' :model=\"' + element.model + '\"'\r\n      }\r\n\r\n      for (const key in element.props) {\r\n        const prop: any = element.props[key]\r\n        //特殊属性判断\r\n        //el-input rows属性 不是textarea的时候不需要加这个属性\r\n        if (\r\n          element.name == 'el-input' &&\r\n          element.props['type'] != 'textarea' &&\r\n          (key as string) == 'rows'\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        //其他正常判断\r\n        if (typeof prop == 'string' && prop != '') {\r\n          start_tag += ' ' + key + '=\"' + prop + '\"'\r\n        }\r\n        if (typeof prop == 'number' && prop != 0) {\r\n          start_tag += ' :' + key + '=\"' + prop + '\"'\r\n        }\r\n        if (typeof prop == 'boolean' && prop) {\r\n          start_tag += ' :' + key + '=\"' + prop.toString() + '\"'\r\n        }\r\n      }\r\n\r\n      //style 单独添加\r\n      if (element.style && element.style != '') {\r\n        start_tag += ' style=\"' + element.style + '\"'\r\n      }\r\n      /****添加属性结束****/\r\n\r\n      html += start_tag + '>\\n' //开始标签左半边加属性加右半边\r\n      //渲染内部文本内容 el-button\r\n      if (element.text && element.text != '') {\r\n        html += '   ' + repeat_space + element.text + '\\n'\r\n      }\r\n      switch (element.name) {\r\n        case 'el-select':\r\n          //未实现\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      if (element.children && element.children.length > 0) {\r\n        //记录递归前的层级\r\n        let temp_level = level\r\n        level++\r\n        //递归嵌套组件\r\n        html = _generateCode(element.children, html, level)\r\n        //递归完了赋值递归前的层级\r\n        level = temp_level\r\n      }\r\n      //标签尾部\r\n      html += repeat_space + '</' + element.name + '>\\n'\r\n    })\r\n    return html\r\n  }\r\n\r\n  return {\r\n    _handleRecursionDelete,\r\n    _handleRecursionGetParentNode,\r\n    _handleRecursionGetNodeByNodeId,\r\n    _generateCode\r\n  }\r\n}\r\nexport default mixins\r\n","/**\r\n数据结构\r\n{\r\n  components: [\r\n    {\r\n      title: '大标题',\r\n      type: '英文标题+类型',\r\n      children: [\r\n        //子控件\r\n        {\r\n          name: '组件名称',\r\n          title: '组件标题',\r\n          props: '组件属性',\r\n          text: '内部文字',\r\n          value:'只是用于绑定设计窗口的变量',\r\n          style: '内联样式',\r\n          children: [],//子节点\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n */\r\nconst components_list: any = {\r\n  components: [\r\n    {\r\n      title: '基础',\r\n      type: 'Basic',\r\n      icon: 'basic',\r\n      children: [\r\n        {\r\n          name: 'el-container',\r\n          title: '布局容器',\r\n          props: {\r\n            direction: 'horizontal'\r\n          },\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-row',\r\n          title: '行',\r\n          props: {\r\n            gutter: 0,\r\n            justify: '',\r\n            align: '',\r\n            type: 'flex',\r\n            class: ''\r\n          },\r\n          text: '',\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-col',\r\n          title: '列',\r\n          props: {\r\n            span: 3,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0,\r\n            class: ''\r\n          },\r\n          text: '',\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-button',\r\n          title: '按钮',\r\n          props: {\r\n            size: 'medium',\r\n            type: 'primary',\r\n            plain: false,\r\n            round: false,\r\n            circle: false,\r\n            loading: false,\r\n            disabled: false,\r\n            icon: '',\r\n            autofocus: false,\r\n            class: ''\r\n          },\r\n          text: '按钮',\r\n          style: '',\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: '表单',\r\n      type: 'Form',\r\n      icon: 'form',\r\n      children: [\r\n        {\r\n          name: 'el-form',\r\n          title: '表单',\r\n          props: {\r\n            ref: 'ruleForm',\r\n            'label-position': 'right',\r\n            'label-width': '100px',\r\n            inline: false,\r\n            size: 'medium',\r\n            disabled: false\r\n          },\r\n          model: '',\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-form-item',\r\n          title: '表单项',\r\n          props: {\r\n            prop: '',\r\n            label: '标签名',\r\n            required: false\r\n          },\r\n          children: [],\r\n          style: ''\r\n        },\r\n        {\r\n          name: 'el-radio-group',\r\n          title: '单选框组',\r\n          props: {\r\n            'v-model': '',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          children: [\r\n            {\r\n              name: 'el-radio',\r\n              title: '单选按钮',\r\n              props: {\r\n                label: '1'\r\n              },\r\n              text: '选项1',\r\n              style: '',\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-radio',\r\n              title: '单选按钮',\r\n              props: {\r\n                label: '2'\r\n              },\r\n              text: '选项2',\r\n              style: '',\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'el-checkbox-group',\r\n          title: '复选框组',\r\n          props: {\r\n            'v-model': '',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          children: [\r\n            {\r\n              name: 'el-checkbox',\r\n              title: '复选框',\r\n              props: {\r\n                label: '1'\r\n              },\r\n              text: '复选框A',\r\n              style: '',\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-checkbox',\r\n              title: '复选框',\r\n              props: {\r\n                label: '2'\r\n              },\r\n              text: '复选框B',\r\n              style: '',\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'el-input',\r\n          title: '输入框',\r\n          props: {\r\n            'v-model': '',\r\n            type: 'text',\r\n            maxlength: 0,\r\n            minlength: 0,\r\n            placeholder: '请输入',\r\n            clearable: false,\r\n            'show-password': false,\r\n            rows: 2,\r\n            autosize: false,\r\n            readonly: false,\r\n            resize: 'none',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-input-number',\r\n          title: '计数器',\r\n          props: {\r\n            'v-model': '',\r\n            max: 99999999,\r\n            min: 0,\r\n            step: 1,\r\n            'step-strictly': false,\r\n            precision: 0,\r\n            disabled: false,\r\n            controls: true,\r\n            placeholder: '请输入数值'\r\n          },\r\n          value: 0,\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-select',\r\n          title: '选择器',\r\n          props: {\r\n            'v-model': '',\r\n            multiple: false,\r\n            disabled: false,\r\n            clearable: false,\r\n            'collapse-tags': false,\r\n            filterable: false,\r\n            placeholder: '请选择'\r\n          },\r\n          value: '',\r\n          style: '',\r\n          children: [\r\n            {\r\n              name: 'el-option',\r\n              title: '选项',\r\n              props: {\r\n                label: '黄金糕',\r\n                value: '1'\r\n              },\r\n              style: '',\r\n              text: '黄金糕1',\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-option',\r\n              title: '选项',\r\n              props: {\r\n                label: '双皮奶',\r\n                value: '2'\r\n              },\r\n              style: '',\r\n              text: '双皮奶1',\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'el-switch',\r\n          title: '开关',\r\n          props: {\r\n            'v-model': '',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-date-picker',\r\n          title: '日期选择器',\r\n          props: {\r\n            'v-model': '',\r\n            type: 'date',\r\n            format: 'YYYY-MM-DD',\r\n            readonly: false,\r\n            disabled: false,\r\n            editable: true,\r\n            clearable: true,\r\n            placeholder: '',\r\n            'start-placeholder': '开始日期',\r\n            'end-placeholder': '结束日期',\r\n            'range-separator': '至'\r\n          },\r\n          value: '',\r\n          style: '',\r\n          children: []\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\nexport default components_list\r\n","\r\nimport { defineComponent, reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\n//导入控件列表\r\nimport components_list from '@/config/components_list'\r\n\r\nexport default defineComponent({\r\n  name: 'ControlBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({})\r\n\r\n    //递归删除旧的占位块\r\n    const { _handleRecursionDelete } = mixins()\r\n\r\n    /**\r\n     * 控件拖动开始       console.log('1.拖动控件节点信息 handleDragStart:', component)\r\n     * @param componet 单个控件节点 包含children\r\n     */\r\n    const handleDragStart = (component: any, e: any) => {\r\n      //参考自 https://github.com/OXOYO/X-Page-Editor-Vue/blob/master/example/components/CustomListItem.vue\r\n      // 生成唯一id\r\n      component.id = 'node-' + new Date().getTime()\r\n\r\n      //如果有children children也要加唯一id\r\n      component.children.forEach((children: any) => {\r\n        children.id = 'node-' + new Date().getTime()\r\n      })\r\n\r\n      //设置拖拽数据\r\n      e.dataTransfer.setData('node', JSON.stringify(component))\r\n    }\r\n\r\n    /**\r\n     * 拖入控件栏，用于删除组件树内的占位块 console.log('7.拖入控件栏，用于删除组件树内的占位块 handleDragEnterContrlList')\r\n     */\r\n    const handleDragEnterContrlList = (e: any) => {\r\n      _handleRecursionDelete('block_node', store.state.component_tree_list)\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      components_list,\r\n      handleDragStart,\r\n      handleDragEnterContrlList,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./ControlBar.vue?vue&type=template&id=2407aec1&scoped=true\"\nimport script from \"./ControlBar.vue?vue&type=script&lang=ts\"\nexport * from \"./ControlBar.vue?vue&type=script&lang=ts\"\n\nimport \"./ControlBar.vue?vue&type=style&index=0&id=2407aec1&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-2407aec1\"\n\nexport default script","<template>\r\n  <el-aside class=\"attribute-bar\" width=\"400px\">\r\n    <el-tabs v-model=\"tab_active_name\">\r\n      <el-tab-pane name=\"1\">\r\n        <template #label>\r\n          <div class=\"icon-box tab-label\">\r\n            <svg-icon name=\"attribute\" className=\"icon\" />控件属性\r\n          </div>\r\n        </template>\r\n        <h4>{{node_info.title}}</h4>\r\n        <el-form ref=\"attribute\" :model=\"attribute\" label-width=\"68px\">\r\n          <!-- el-container start -->\r\n          <template v-if=\"node_info.name == 'el-container'\">\r\n            <el-form-item v-if=\"attribute.direction||attribute.direction==''\" label=\"排列方向\">\r\n              <el-select v-model=\"attribute.direction\" placeholder=\"排列方向\" clearable>\r\n                <el-option key=\"horizontal \" label=\"水平\" value=\"horizontal \"></el-option>\r\n                <el-option key=\"vertical\" label=\"垂直\" value=\"vertical\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-container end -->\r\n          <!-- el-row start -->\r\n          <template v-if=\"node_info.name == 'el-row'\">\r\n            <el-form-item v-if=\"node_info.text||node_info.text==''\" label=\"文本\">\r\n              <el-input v-model=\"node_info.text\" placeholder=\"内部文本内容\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.gutter||attribute.gutter==0\" label=\"栅格间隔\">\r\n              <el-input-number v-model=\"attribute.gutter\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.justify||attribute.justify==''\" label=\"水平对齐\">\r\n              <el-select v-model=\"attribute.justify\" placeholder=\"水平对齐\" clearable>\r\n                <el-option key=\"start\" label=\"左对齐\" value=\"start\"></el-option>\r\n                <el-option key=\"center\" label=\"居中\" value=\"center\"></el-option>\r\n                <el-option key=\"end\" label=\"右对齐\" value=\"end\"></el-option>\r\n                <el-option key=\"space-around\" label=\"两端对齐(around)\" value=\"space-around\"></el-option>\r\n                <el-option key=\"space-between\" label=\"两端对齐(between)\" value=\"space-between\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.align||attribute.align==''\" label=\"垂直对齐\">\r\n              <el-select v-model=\"attribute.align\" placeholder=\"垂直对齐\" clearable>\r\n                <el-option key=\"top\" label=\"顶部\" value=\"top\"></el-option>\r\n                <el-option key=\"middle\" label=\"居中\" value=\"middle\"></el-option>\r\n                <el-option key=\"bottom\" label=\"底部\" value=\"bottom\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-input v-model=\"attribute.type\" placeholder=\"类型\" clearable></el-input>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-row end -->\r\n          <!-- el-col start -->\r\n          <template v-if=\"node_info.name == 'el-col'\">\r\n            <el-form-item v-if=\"node_info.text||node_info.text==''\" label=\"文本\">\r\n              <el-input v-model=\"node_info.text\" placeholder=\"内部文本内容\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.span\" label=\"栅格列数\">\r\n              <el-input-number v-model=\"attribute.span\" :controls=\"true\" :min=\"1\" :max=\"24\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.offset||attribute.offset==0\" label=\"左侧间隔\">\r\n              <el-input-number v-model=\"attribute.offset\" :controls=\"true\" :min=\"0\" :max=\"24\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.push||attribute.push==0\" label=\"向右移动\">\r\n              <el-input-number v-model=\"attribute.push\" :controls=\"true\" :min=\"0\" :max=\"24\"\r\n                               :disabled=\"attribute.pull>0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.pull||attribute.pull==0\" label=\"向左移动\">\r\n              <el-input-number v-model=\"attribute.pull\" :controls=\"true\" :min=\"0\" :max=\"24\"\r\n                               :disabled=\"attribute.push>0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-col end -->\r\n          <!-- el-button start -->\r\n          <template v-if=\"node_info.name == 'el-button'\">\r\n            <el-form-item v-if=\"node_info.text||node_info.text==''\" label=\"文本\">\r\n              <el-input v-model=\"node_info.text\" placeholder=\"内部文本内容\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.size||attribute.size==''\" label=\"尺寸\">\r\n              <el-select v-model=\"attribute.size\" placeholder=\"尺寸\" clearable>\r\n                <el-option key=\"medium\" label=\"正常\" value=\"medium\"></el-option>\r\n                <el-option key=\"small\" label=\"小\" value=\"small\"></el-option>\r\n                <el-option key=\"mini\" label=\"迷你\" value=\"mini\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-select v-model=\"attribute.type\" placeholder=\"类型\" clearable>\r\n                <el-option key=\"default\" label=\"默认\" value=\"default\"></el-option>\r\n                <el-option key=\"primary\" label=\"主要\" value=\"primary\"></el-option>\r\n                <el-option key=\"success\" label=\"成功\" value=\"success\"></el-option>\r\n                <el-option key=\"warning\" label=\"警告\" value=\"warning\"></el-option>\r\n                <el-option key=\"danger\" label=\"危险\" value=\"danger\"></el-option>\r\n                <el-option key=\"info\" label=\"信息\" value=\"info\"></el-option>\r\n                <el-option key=\"text\" label=\"文本\" value=\"text\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"朴素按钮\">\r\n              <el-switch v-model=\"attribute.plain\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"圆角按钮\">\r\n              <el-switch v-model=\"attribute.round\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"圆形按钮\">\r\n              <el-switch v-model=\"attribute.circle\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"加载中\">\r\n              <el-switch v-model=\"attribute.loading\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.icon||attribute.icon==''\" label=\"图标类名\">\r\n              <el-input v-model=\"attribute.icon\" placeholder=\"图标类名\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"自动聚焦\">\r\n              <el-switch v-model=\"attribute.autofocus\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-button end -->\r\n          <!-- el-form-item start -->\r\n          <template v-if=\"node_info.name == 'el-form'\">\r\n            <el-form-item v-if=\"node_info.model||node_info.model==''\" label=\"表单对象\">\r\n              <el-input v-model=\"node_info.model\" placeholder=\"表单对象 form\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.ref||attribute.ref==''\" label=\"ref\">\r\n              <el-input v-model=\"attribute.ref\" placeholder=\"ref\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"行内表单\">\r\n              <el-switch v-model=\"attribute.inline\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute['label-position']||attribute['label-position']==''\" label=\"标签位置\">\r\n              <el-select v-model=\"attribute['label-position']\" placeholder=\"标签位置\" clearable>\r\n                <el-option key=\"left\" label=\"左对齐\" value=\"left\"></el-option>\r\n                <el-option key=\"top\" label=\"顶部对齐\" value=\"top\"></el-option>\r\n                <el-option key=\"right\" label=\"右对齐\" value=\"right\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute['label-width']||attribute['label-width']==''\" label=\"标签宽度\">\r\n              <el-input v-model=\"attribute['label-width']\" placeholder=\"标签宽度 100px\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.size||attribute.size==''\" label=\"尺寸\">\r\n              <el-select v-model=\"attribute.size\" placeholder=\"尺寸\" clearable>\r\n                <el-option key=\"medium\" label=\"正常\" value=\"medium\"></el-option>\r\n                <el-option key=\"small\" label=\"小\" value=\"small\"></el-option>\r\n                <el-option key=\"mini\" label=\"迷你\" value=\"mini\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-form-item end -->\r\n          <!-- el-form-item start -->\r\n          <template v-if=\"node_info.name == 'el-form-item'\">\r\n            <el-form-item v-if=\"attribute.prop||attribute.prop==''\" label=\"属性字段\">\r\n              <el-input v-model=\"attribute.prop\" placeholder=\"属性字段 prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.label||attribute.label==''\" label=\"标签\">\r\n              <el-input v-model=\"attribute.label\" placeholder=\"标签\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"必填\">\r\n              <el-switch v-model=\"attribute.required\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-form-item end -->\r\n          <!-- el-radio-group start -->\r\n          <template v-if=\"node_info.name == 'el-radio-group'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"选项设置\">\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row>\r\n                  <el-col :span=\"10\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"名称\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"8\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteRadioItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddRadioItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-radio-group end -->\r\n          <!-- el-checkbox-group start -->\r\n          <template v-if=\"node_info.name == 'el-checkbox-group'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"选项设置\">\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row>\r\n                  <el-col :span=\"10\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"名称\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"8\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteCheckBoxItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddCheckBoxItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-checkbox-group end -->\r\n          <!-- el-input start -->\r\n          <template v-if=\"node_info.name == 'el-input'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-select v-model=\"attribute.type\" placeholder=\"类型\" clearable>\r\n                <el-option key=\"text\" label=\"文本\" value=\"text\"></el-option>\r\n                <el-option key=\"number\" label=\"数字\" value=\"number\"></el-option>\r\n                <el-option key=\"password\" label=\"密码\" value=\"password\"></el-option>\r\n                <el-option key=\"textarea\" label=\"文本域\" value=\"textarea\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.maxlength||attribute.maxlength==0\" label=\"最大长度\">\r\n              <el-input-number v-model=\"attribute.maxlength\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.minlength||attribute.minlength==0\" label=\"最小长度\">\r\n              <el-input-number v-model=\"attribute.minlength\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n              <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"清空\">\r\n              <el-switch v-model=\"attribute.clearable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"密文\">\r\n              <el-switch v-model=\"attribute['show-password']\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type == 'textarea'&&(attribute.rows||attribute.rows==0)\" label=\"输入行数\">\r\n              <el-input-number v-model=\"attribute.rows\" :controls=\"true\" :min=\"2\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type == 'textarea'\" label=\"自动高度\">\r\n              <el-switch v-model=\"attribute.autosize\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type == 'textarea'\" label=\"缩放\">\r\n              <el-select v-model=\"attribute.resize\" placeholder=\"缩放\" clearable>\r\n                <el-option key=\"none\" label=\"无缩放\" value=\"none\"></el-option>\r\n                <el-option key=\"both\" label=\"全部缩放\" value=\"both\"></el-option>\r\n                <el-option key=\"horizontal\" label=\"水平缩放\" value=\"horizontal\"></el-option>\r\n                <el-option key=\"vertical\" label=\"垂直缩放\" value=\"vertical\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"只读\">\r\n              <el-switch v-model=\"attribute.readonly\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-input end -->\r\n          <!-- el-input-number start -->\r\n          <template v-if=\"node_info.name == 'el-input-number'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.max||attribute.max==0\" label=\"最大值\">\r\n              <el-input-number v-model=\"attribute.max\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.min||attribute.min==0\" label=\"最小值\">\r\n              <el-input-number v-model=\"attribute.min\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.step||attribute.step==0\" label=\"步长\">\r\n              <el-input-number v-model=\"attribute.step\" :controls=\"true\" :min=\"1\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"输入倍数\">\r\n              <el-switch v-model=\"attribute['step-strictly']\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.precision||attribute.precision==0\" label=\"精度\">\r\n              <el-input-number v-model=\"attribute.precision\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"控制按钮\">\r\n              <el-switch v-model=\"attribute.controls\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n              <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-input-number end -->\r\n          <!-- el-select start -->\r\n          <template v-if=\"node_info.name == 'el-select'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label-width=\"0\">\r\n              <el-row>\r\n                <label class=\"el-form-item__label\" style=\"width: 68px;\">选项设置</label>\r\n              </el-row>\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row>\r\n                  <el-col :span=\"7\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"下拉值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"7\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"显示值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.value\" placeholder=\"值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"3\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteSelectItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddSelectItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-form-item label=\"多选\">\r\n              <el-switch v-model=\"attribute.multiple\" @change=\"((val)=>{\r\n                          if(val){\r\n                            node_info.value = []\r\n                          }else{\r\n                            node_info.value = ''\r\n                            attribute['collapse-tags'] = false\r\n                          }\r\n                         })\">\r\n              </el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"清空\">\r\n              <el-switch v-model=\"attribute.clearable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.multiple\" label=\"多选合并\">\r\n              <el-switch v-model=\"attribute['collapse-tags']\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"搜索\">\r\n              <el-switch v-model=\"attribute.filterable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n              <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-select end -->\r\n          <!-- el-switch start -->\r\n          <template v-if=\"node_info.name == 'el-switch'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-switch end -->\r\n          <!-- el-date-picker start -->\r\n          <template v-if=\"node_info.name == 'el-date-picker'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-select v-model=\"attribute.type\" placeholder=\"请选择选择器类型\" @change=\"node_info.value = ''\" clearable>\r\n                <el-option key=\"year\" label=\"年\" value=\"year\"></el-option>\r\n                <el-option key=\"month\" label=\"月\" value=\"month\"></el-option>\r\n                <el-option key=\"date\" label=\"日\" value=\"date\"></el-option>\r\n                <el-option key=\"dates\" label=\"日（多选带确定按钮）\" value=\"dates\"></el-option>\r\n                <el-option key=\"datetime\" label=\"日期时间\" value=\"datetime\"></el-option>\r\n                <el-option key=\"datetimerange\" label=\"日期时间范围\" value=\"datetimerange\"></el-option>\r\n                <el-option key=\"daterange\" label=\"日期范围\" value=\"daterange\"></el-option>\r\n                <el-option key=\"monthrange\" label=\"月份范围\" value=\"monthrange\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.format||attribute.format==''\" label=\"日期格式\">\r\n              <el-input v-model=\"attribute.format\" placeholder=\"日期格式\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"只读\">\r\n              <el-switch v-model=\"attribute.readonly\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"编辑\">\r\n              <el-switch v-model=\"attribute.editable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"清空\">\r\n              <el-switch v-model=\"attribute.clearable\"></el-switch>\r\n            </el-form-item>\r\n            <template v-if=\"attribute.type=='year' || attribute.type=='month' || attribute.type=='date' \r\n                  || attribute.type=='dates'|| attribute.type=='datetime'\">\r\n              <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n                <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n              </el-form-item>\r\n            </template>\r\n            <template v-else>\r\n              <el-form-item v-if=\"attribute['start-placeholder']||attribute['start-placeholder']==''\" label=\"开始占位\">\r\n                <el-input v-model=\"attribute['start-placeholder']\" placeholder=\"范围开始占位\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item v-if=\"attribute['end-placeholder']||attribute['end-placeholder']==''\" label=\"结束占位\">\r\n                <el-input v-model=\"attribute['end-placeholder']\" placeholder=\"范围结束占位\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item v-if=\"attribute['range-separator']||attribute['range-separator']==''\" label=\"分隔符\">\r\n                <el-input v-model=\"attribute['range-separator']\" placeholder=\"范围分隔符\" clearable></el-input>\r\n              </el-form-item>\r\n            </template>\r\n          </template>\r\n          <!-- el-date-picker end -->\r\n          <!-- public attribute start-->\r\n          <el-form-item v-if=\"attribute.class||attribute.class==''\" label=\"class\">\r\n            <el-input v-model=\"attribute.class\" placeholder=\"css类名\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item v-if=\"node_info.style||node_info.style==''\" label=\"行内样式\">\r\n            <el-input type=\"textarea\" v-model=\"node_info.style\" placeholder=\"行内样式\" autosize clearable></el-input>\r\n          </el-form-item>\r\n          <!-- public attribute end-->\r\n        </el-form>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"节点树\" name=\"2\">\r\n        <template #label>\r\n          <div class=\"icon-box tab-label\">\r\n            <svg-icon name=\"tree\" className=\"icon\" />节点树\r\n          </div>\r\n        </template>\r\n        <el-tree :data=\"tree\" :props=\"defaultProps\" :render-after-expand=\"false\" :highlight-current=\"true\" node-key=\"id\"\r\n                 :indent=\"32\" :default-expand-all=\"true\" :expand-on-click-node=\"false\" draggable\r\n                 @node-click=\"handleClickTreeNode\">\r\n          <template #=\"{ node, data }\">\r\n            <!-- 用于显示内容 -->\r\n            <div class=\"custom-tree-node\">\r\n              {{data.name}}\r\n            </div>\r\n            <!-- 用于触发事件 机智 -->\r\n            <div class=\"custom-tree-node-block\" @mouseover=\"handleMouseOverTreeNode(node,data)\"\r\n                 @mouseout=\"handleMouseOutTreeNode(node,data)\">用于触发事件 机智</div>\r\n          </template>\r\n        </el-tree>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n  </el-aside>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {\r\n  defineComponent,\r\n  reactive,\r\n  toRefs,\r\n  computed,\r\n  watch,\r\n  nextTick,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'AttributeBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_active_name: '1', //激活的tab栏\r\n      tree: store.state.component_tree_list, //节点树\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name',\r\n      }, //节点树 属性\r\n    })\r\n\r\n    const {\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //当前操作控件信息\r\n    const node_info: any = computed({\r\n      get() {\r\n        return store.state.current_node_info\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //计算属性\r\n    const attribute: any = computed({\r\n      get() {\r\n        return store.state.current_node_info.props\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //属性改变每次设置高亮 不然高亮边框会消失\r\n    watch(\r\n      attribute,\r\n      (a: any, b: any) => {\r\n        nextTick(() => {\r\n          //清除高亮边框\r\n          let border = document.getElementsByClassName(\r\n            'border'\r\n          )[0] as HTMLElement\r\n          if (border) {\r\n            border.className = border.className.replace(' border', '')\r\n          }\r\n\r\n          //高亮控件边框\r\n          let node_element = document.getElementById(\r\n            store.state.current_node_info.id\r\n          ) as HTMLElement\r\n          if (node_element) {\r\n            node_element.className = node_element.className + ' border'\r\n          }\r\n        })\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    //点击添加单选按钮选项\r\n    const handleClickAddRadioItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-radio',\r\n        title: '单选按钮',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除单选按钮选项\r\n    const handleClickDeleteRadioItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加复选框选项\r\n    const handleClickAddCheckBoxItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-checkbox',\r\n        title: '复选框',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除复选框选项\r\n    const handleClickDeleteCheckBoxItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加选择器选项\r\n    const handleClickAddSelectItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-option',\r\n        title: '选项',\r\n        props: {\r\n          label: '',\r\n          value: '',\r\n        },\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除选择器选项\r\n    const handleClickDeleteSelectItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击节点树节点\r\n    const handleClickTreeNode = (val: any) => {\r\n      //选中高亮区域\r\n      if (val.id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(val.id, data.tree)\r\n\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    //鼠标移入节点树节点，显示边框\r\n    const handleMouseOverTreeNode = (node: any, data: any) => {\r\n      if (data.id) {\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(data.id) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' hover-border'\r\n        }\r\n      }\r\n    }\r\n    //鼠标移除节点树节点隐藏边框\r\n    const handleMouseOutTreeNode = (node: any, data: any) => {\r\n      //清除高亮边框\r\n      let border = document.getElementsByClassName(\r\n        'hover-border'\r\n      )[0] as HTMLElement\r\n      if (border) {\r\n        border.className = border.className.replace(' hover-border', '')\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      node_info,\r\n      attribute,\r\n      handleClickAddRadioItem,\r\n      handleClickDeleteRadioItem,\r\n      handleClickAddCheckBoxItem,\r\n      handleClickDeleteCheckBoxItem,\r\n      handleClickAddSelectItem,\r\n      handleClickDeleteSelectItem,\r\n      handleClickTreeNode,\r\n      handleMouseOverTreeNode,\r\n      handleMouseOutTreeNode,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.attribute-bar {\r\n  padding: 20px;\r\n  background: #ffffff;\r\n  border-left: 1px solid #e6e6e6;\r\n  .icon {\r\n    fill: $white;\r\n  }\r\n  .tab-label {\r\n    .icon {\r\n      fill: $h3c;\r\n    }\r\n  }\r\n  .custom-tree-node {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    height: 100%;\r\n  }\r\n  .custom-tree-node-block {\r\n    position: absolute;\r\n    opacity: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n  }\r\n}\r\n</style>","\r\nimport {\r\n  defineComponent,\r\n  reactive,\r\n  toRefs,\r\n  computed,\r\n  watch,\r\n  nextTick,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'AttributeBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_active_name: '1', //激活的tab栏\r\n      tree: store.state.component_tree_list, //节点树\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name',\r\n      }, //节点树 属性\r\n    })\r\n\r\n    const {\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //当前操作控件信息\r\n    const node_info: any = computed({\r\n      get() {\r\n        return store.state.current_node_info\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //计算属性\r\n    const attribute: any = computed({\r\n      get() {\r\n        return store.state.current_node_info.props\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //属性改变每次设置高亮 不然高亮边框会消失\r\n    watch(\r\n      attribute,\r\n      (a: any, b: any) => {\r\n        nextTick(() => {\r\n          //清除高亮边框\r\n          let border = document.getElementsByClassName(\r\n            'border'\r\n          )[0] as HTMLElement\r\n          if (border) {\r\n            border.className = border.className.replace(' border', '')\r\n          }\r\n\r\n          //高亮控件边框\r\n          let node_element = document.getElementById(\r\n            store.state.current_node_info.id\r\n          ) as HTMLElement\r\n          if (node_element) {\r\n            node_element.className = node_element.className + ' border'\r\n          }\r\n        })\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    //点击添加单选按钮选项\r\n    const handleClickAddRadioItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-radio',\r\n        title: '单选按钮',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除单选按钮选项\r\n    const handleClickDeleteRadioItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加复选框选项\r\n    const handleClickAddCheckBoxItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-checkbox',\r\n        title: '复选框',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除复选框选项\r\n    const handleClickDeleteCheckBoxItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加选择器选项\r\n    const handleClickAddSelectItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-option',\r\n        title: '选项',\r\n        props: {\r\n          label: '',\r\n          value: '',\r\n        },\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除选择器选项\r\n    const handleClickDeleteSelectItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击节点树节点\r\n    const handleClickTreeNode = (val: any) => {\r\n      //选中高亮区域\r\n      if (val.id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(val.id, data.tree)\r\n\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    //鼠标移入节点树节点，显示边框\r\n    const handleMouseOverTreeNode = (node: any, data: any) => {\r\n      if (data.id) {\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(data.id) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' hover-border'\r\n        }\r\n      }\r\n    }\r\n    //鼠标移除节点树节点隐藏边框\r\n    const handleMouseOutTreeNode = (node: any, data: any) => {\r\n      //清除高亮边框\r\n      let border = document.getElementsByClassName(\r\n        'hover-border'\r\n      )[0] as HTMLElement\r\n      if (border) {\r\n        border.className = border.className.replace(' hover-border', '')\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      node_info,\r\n      attribute,\r\n      handleClickAddRadioItem,\r\n      handleClickDeleteRadioItem,\r\n      handleClickAddCheckBoxItem,\r\n      handleClickDeleteCheckBoxItem,\r\n      handleClickAddSelectItem,\r\n      handleClickDeleteSelectItem,\r\n      handleClickTreeNode,\r\n      handleMouseOverTreeNode,\r\n      handleMouseOutTreeNode,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./AttributeBar.vue?vue&type=template&id=fe074efa&scoped=true\"\nimport script from \"./AttributeBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AttributeBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AttributeBar.vue?vue&type=style&index=0&id=fe074efa&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-fe074efa\"\n\nexport default script","<template>\r\n  <el-container style=\"height:calc(100vh - 40px);background-color: rgb(255, 255, 255);\">\r\n    <el-container style=\"flex-direction: column;\">\r\n      <tool-bar @handleChangeDesigner=\"handleChangeDesigner\" @handleClearLayout=\"handleClearLayout\"\r\n                @handleDeleteControl=\"handleDeleteControl\"> </tool-bar>\r\n      <el-main v-if=\"tab_index == 1\" @dragenter=\"handleDragEnter\" @dragover=\"handleDragOver\"\r\n               @dragleave=\"handleDragLeave\" @drop=\"handleDrop\" @click=\"handleClick\">\r\n        <!-- 使用递归组件 -->\r\n        <component-tree :component_tree_list=\"component_tree_list\"></component-tree>\r\n      </el-main>\r\n      <el-main v-if=\"tab_index == 2\" v-highlightjs>\r\n        <h5 v-if=\"code!=''\">html</h5>\r\n        <pre v-if=\"code!=''\"><code class=\"language-html\" contenteditable=\"true\">{{code}}</code></pre>\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs, nextTick, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n//导入递归组件树\r\nimport ComponentTree from '@/components/ComponentTree.vue'\r\n//导入工具栏\r\nimport ToolBar from '@/components/ToolBar.vue'\r\nimport store from '@/store'\r\n\r\nexport default defineComponent({\r\n  name: 'Designer',\r\n  components: {\r\n    ComponentTree,\r\n    ToolBar,\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _generateCode, //递归生成代码\r\n    } = mixins()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_index: 1, //页面内容 1界面设计 2查看代码\r\n      component_tree_list: store.state.component_tree_list, //组件树\r\n      insert_index: 0, //当前控件插入位置索引\r\n      code: '', //根据组件树生成的代码\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      //监听 键盘按下事件\r\n      document.onkeydown = function (event: any) {\r\n        var e = event || window.event || arguments.callee.caller.arguments[0]\r\n\r\n        if (e && e.keyCode == 46) {\r\n          // 按下DELETE 删除控件\r\n          handleDeleteControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 67) {\r\n          //ctrl+c 复制节点\r\n          handleCopyControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 88) {\r\n          //ctrl+x 剪切节点 先复制后删除\r\n          handleCopyControl()\r\n          handleDeleteControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 86) {\r\n          //ctrl+v 粘贴节点\r\n          handlePasteControl()\r\n        }\r\n      }\r\n    })\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发 console.log('2.控件进入最外层主窗口触发 handleDragEnter')\r\n    const handleDragEnter = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动或停留时触发 console.log('3.控件在最外层主窗口移动或停留时触发 handleDragOver')\r\n    const handleDragOver = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      let flag_position = false //有没有找到元素所在位置标志\r\n\r\n      //循环第一层的元素 判断该当前鼠标位置在对应水平线元素的中线上面还是下面，上面就在上面插入占位块，下面就在下面插入占位块\r\n      for (let i = 0; i < data.component_tree_list.length; i++) {\r\n        const node = data.component_tree_list[i]\r\n        const ele = document.getElementById(node.id) as HTMLElement\r\n        if (i == 0 && e.clientY < ele.offsetTop) {\r\n          //在第一个的上面，插入到最前面\r\n          flag_position = true\r\n          data.insert_index = 0\r\n          break\r\n        } else if (\r\n          e.clientY >= ele.offsetTop &&\r\n          e.clientY < ele.offsetTop + ele.offsetHeight / 2\r\n        ) {\r\n          //在当前元素的水平中线上面\r\n          flag_position = true\r\n          data.insert_index = i\r\n          break\r\n        } else if (\r\n          e.clientY >= ele.offsetTop + ele.offsetHeight / 2 &&\r\n          e.clientY < ele.offsetTop + ele.offsetHeight\r\n        ) {\r\n          //在当前元素的水平中线下面\r\n          flag_position = true\r\n          data.insert_index = i + 1\r\n          break\r\n        } else if (i == data.component_tree_list.length - 1 && !flag_position) {\r\n          //在最后一个的下面，插入的最后面\r\n          data.insert_index = i + 1\r\n          break\r\n        }\r\n      }\r\n\r\n      //递归删除所有占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //生成一个占位块\r\n      let block_node: any = {\r\n        id: 'block_node',\r\n        title: '',\r\n        name: 'el-row',\r\n        props: {},\r\n        style:\r\n          'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n      }\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, block_node)\r\n    }\r\n\r\n    //当被拖动元素没有放下就离开释放区时触发       console.log('4.控件移出最外层主窗口触发 handleDragLeave')\r\n    const handleDragLeave = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区里放下时触发       console.log('5.控件在最外层释放区放下 handleDrop')\r\n    const handleDrop = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      //删除占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //获取拖动数据\r\n      let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, node_info)\r\n\r\n      //设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n    }\r\n\r\n    //点击main\r\n    const handleClick = (e: any) => {\r\n      //点击空白区域\r\n      if (e.target.className == 'el-main') {\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //改变主设计窗口显示内容\r\n    const handleChangeDesigner = (val: number) => {\r\n      //切换显示内容索引\r\n      data.tab_index = val\r\n\r\n      if (val == 2) {\r\n        //隐藏属性栏 设置当前操作对象 暂时先隐藏\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n        //递归生成代码\r\n        data.code = _generateCode(store.state.component_tree_list)\r\n      }\r\n    }\r\n\r\n    //清空布局\r\n    const handleClearLayout = () => {\r\n      store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n\r\n      //这里主要响应对象不能直接赋值[] 会使其响应性失效\r\n      data.component_tree_list.splice(0, data.component_tree_list.length)\r\n    }\r\n\r\n    //删除控件\r\n    const handleDeleteControl = () => {\r\n      if (store.state.current_node_info.id) {\r\n        //递归删除节点及其子节点\r\n        _handleRecursionDelete(\r\n          store.state.current_node_info.id,\r\n          data.component_tree_list\r\n        )\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //复制控件\r\n    const handleCopyControl = () => {\r\n      if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n        //如果当前选中节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.current_node_info)\r\n        )\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n      }\r\n    }\r\n\r\n    const handlePasteControl = () => {\r\n      if (Object.keys(store.state.copy_node_info).length > 0) {\r\n        //如果有复制节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.copy_node_info)\r\n        )\r\n        //白名单 只要在这里面的节点 循环的时候子级的id和父级的相同即可 这样选中子级的时候就等同于选择了父级\r\n        let white_list = ['el-radio-group', 'el-checkbox-group', 'el-select']\r\n        //递归所有children重新生成id方法\r\n        let recursionGenerateNode = (node: any, level: number = 0) => {\r\n          node.id = 'node-' + new Date().getTime() + level\r\n          if (node.children) {\r\n            node.children.forEach((element: any) => {\r\n              if (!white_list.includes(node.name)) {\r\n                //不在白名单里的控件id需要加1\r\n                level++\r\n              }\r\n              recursionGenerateNode(element, level)\r\n            })\r\n          }\r\n          return node\r\n        }\r\n        copy_node_info = recursionGenerateNode(copy_node_info) //递归所有children重新生成id，保证粘贴的都是不一样的元素，不然粘贴的元素就和前面的一样啦\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n        if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n          //放到选中的控件children中\r\n          store.state.current_node_info.children.push(\r\n            store.state.copy_node_info\r\n          )\r\n        } else {\r\n          //放到最外层\r\n          store.state.component_tree_list.push(store.state.copy_node_info)\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnter,\r\n      handleDragOver,\r\n      handleDragLeave,\r\n      handleDrop,\r\n      handleClick,\r\n      handleChangeDesigner,\r\n      handleClearLayout,\r\n      handleDeleteControl,\r\n      handleCopyControl,\r\n      handlePasteControl,\r\n    }\r\n  },\r\n})\r\n</script>\r\n","<template>\r\n  <!-- 递归循环渲染组件树 -->\r\n  <template v-for=\"(node, index) in component_tree_list\" :key=\"node.id + index\">\r\n    <!-- 日期控件加属性和选择有问题单独处理 -->\r\n    <template v-if=\"node.name =='el-date-picker'\">\r\n      <div style=\"display:inline-block;\" :id=\"node.id\" :class=\"handleShowBorder(node)\" :draggable=\"false\"\r\n           @dragenter.stop.prevent=\"handleDragEnterOnNode\" @dragover.stop.prevent=\"handleDragOverOnNode(node,$event)\"\r\n           @drop.stop.prevent=\"handleDropOnNode(node, $event)\" @click.stop.prevent=\"handleClick\">\r\n        <component :is=\"node.name\" v-model=\"node.value\" :type=\"node.props.type\" :readonly=\"node.props.readonly\"\r\n                   :disabled=\"node.props.disabled\" :editable=\"node.props.editable\" :clearable=\"node.props.clearable\"\r\n                   :placeholder=\"node.props.placeholder\" :start-placeholder=\"node.props['start-placeholder']\"\r\n                   :end-placeholder=\"node.props['end-placeholder']\" :range-separator=\"node.props['range-separator']\"\r\n                   :style=\"node.style\">\r\n          {{node.text}}\r\n          <template v-if=\"node.children\">\r\n            <component-tree :component_tree_list=\"node.children\"></component-tree>\r\n          </template>\r\n        </component>\r\n      </div>\r\n    </template>\r\n    <!-- 其他控件没问题 -->\r\n    <template v-else>\r\n      <component :id=\"node.id\" :is=\"node.name\" v-bind=\"node.props\" v-model=\"node.value\" :class=\"handleShowBorder(node)\"\r\n                 :style=\"node.style\" :draggable=\"false\" @dragenter.stop.prevent=\"handleDragEnterOnNode\"\r\n                 @dragover.stop.prevent=\"handleDragOverOnNode(node,$event)\"\r\n                 @drop.stop.prevent=\"handleDropOnNode(node, $event)\" @click.stop.prevent=\"handleClick\">\r\n        {{node.text}}\r\n        <template v-if=\"node.children\">\r\n          <component-tree :component_tree_list=\"node.children\"></component-tree>\r\n        </template>\r\n      </component>\r\n    </template>\r\n  </template>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, getCurrentInstance, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'ComponentTree',\r\n  props: {\r\n    //表格数据\r\n    component_tree_list: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      },\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //当前组件实例\r\n    const internalInstance = getCurrentInstance()\r\n\r\n    //访问 globalProperties\r\n    const global: any = internalInstance?.appContext.config.globalProperties\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      sotre_component_tree_list: store.state.component_tree_list, //组件树\r\n      show_border: true, //是否显示边框线\r\n    })\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _handleRecursionGetParentNode, //递归查找父级节点\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发  console.log('6.控件进入子控件触发 handleDragEnterOnNode')\r\n    const handleDragEnterOnNode = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动时触发   console.log('7.控件进入子控件触发 handleDragOverOnNode')\r\n    const handleDragOverOnNode = (node: any, e: any) => {\r\n      //如果是在占位块上移动，则算是在他父级上移动,且占位块不发生任何变化\r\n      let parent_node: any = null\r\n\r\n      if (node.id == 'block_node') {\r\n        parent_node = _handleRecursionGetParentNode(\r\n          node,\r\n          data.sotre_component_tree_list\r\n        )\r\n        node = parent_node\r\n      }\r\n\r\n      //如果没有父级说明不是在占位块上移动，则删除占位块并重新生成\r\n      if (!parent_node) {\r\n        //删除之前的占位块\r\n        _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n        //生成一个占位块\r\n        let block_node: any = {\r\n          id: 'block_node',\r\n          title: '占位块',\r\n          name: 'el-row',\r\n          props: {},\r\n          style:\r\n            'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n        }\r\n\r\n        //插入到元素内部\r\n        if (node.children) {\r\n          node.children.push(block_node)\r\n        } else {\r\n          //说明是在最外层 添加占位块\r\n          node.push(block_node)\r\n        }\r\n      }\r\n    }\r\n\r\n    //当被拖动元素在节点上释放时\r\n    const handleDropOnNode = (node: any, e: any) => {\r\n      if (node.id == 'block_node') {\r\n        //如果是在占位块上释放，则算是在他父级上释放\r\n        let parent_node = _handleRecursionGetParentNode(\r\n          node,\r\n          props.component_tree_list\r\n        )\r\n        node = parent_node\r\n      }\r\n\r\n      //删除之前的占位块 要在找父级之后，不然占位块都没了，怎么找父级\r\n      _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n      //获取拖动数据\r\n      let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n      if (node.children) {\r\n        //添加到子控件\r\n        node.children.push(node_info)\r\n      } else {\r\n        //放入最外层数组或者是子控件的children数组里面\r\n        node.push(node_info)\r\n      }\r\n\r\n      //设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n    }\r\n\r\n    //是否显示边框线\r\n    const handleShowBorder = (node: any) => {\r\n      let white_list = [\r\n        'el-container',\r\n        'el-row',\r\n        'el-col',\r\n        'el-form',\r\n        'el-form-item',\r\n      ]\r\n\r\n      if (white_list.includes(node.name) && store.state.show_border) {\r\n        return 'padding'\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n\r\n    const handleClick = (e: any) => {\r\n      //递归找id 这里可能点了内部的文字所以要递归找\r\n      const recursionFindNodeId: any = (e: any, level: number = 0) => {\r\n        if (e.target && e.target.id) {\r\n          return e.target.id\r\n        } else if (e.id) {\r\n          return e.id\r\n        } else if (level > 3) {\r\n          //找4层 后返回\r\n          return false\r\n        } else {\r\n          //如果是点击了内部的文字则往上找id\r\n          level++\r\n          return recursionFindNodeId(\r\n            e.target ? e.target.parentElement : e.parentElement,\r\n            level\r\n          )\r\n        }\r\n      }\r\n\r\n      let target_id = recursionFindNodeId(e)\r\n\r\n      if (e.target.className == 'el-switch__core') {\r\n        //如果是开关控件，则是找到他的兄弟节点\r\n        target_id = e.target.parentNode.children[0].id\r\n      } else if (e.target.className == 'el-select__tags') {\r\n        //如果是多选下拉框，则找到他兄弟节点的子节点\r\n        target_id = e.target.parentNode.children[1].children[0].id\r\n      }\r\n\r\n      //选中高亮区域\r\n      if (target_id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(\r\n          target_id,\r\n          data.sotre_component_tree_list\r\n        )\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnterOnNode,\r\n      handleDragOverOnNode,\r\n      handleDropOnNode,\r\n      handleShowBorder,\r\n      handleClick,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.padding {\r\n  padding: 20px 20px;\r\n  border: 1px dashed #cccccc;\r\n  box-sizing: border-box;\r\n}\r\n.border {\r\n  border: 1px solid $theme;\r\n}\r\n.hover-border {\r\n  border: 1px dashed $theme;\r\n}\r\n</style>","\r\nimport { defineComponent, reactive, getCurrentInstance, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'ComponentTree',\r\n  props: {\r\n    //表格数据\r\n    component_tree_list: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      },\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //当前组件实例\r\n    const internalInstance = getCurrentInstance()\r\n\r\n    //访问 globalProperties\r\n    const global: any = internalInstance?.appContext.config.globalProperties\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      sotre_component_tree_list: store.state.component_tree_list, //组件树\r\n      show_border: true, //是否显示边框线\r\n    })\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _handleRecursionGetParentNode, //递归查找父级节点\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发  console.log('6.控件进入子控件触发 handleDragEnterOnNode')\r\n    const handleDragEnterOnNode = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动时触发   console.log('7.控件进入子控件触发 handleDragOverOnNode')\r\n    const handleDragOverOnNode = (node: any, e: any) => {\r\n      //如果是在占位块上移动，则算是在他父级上移动,且占位块不发生任何变化\r\n      let parent_node: any = null\r\n\r\n      if (node.id == 'block_node') {\r\n        parent_node = _handleRecursionGetParentNode(\r\n          node,\r\n          data.sotre_component_tree_list\r\n        )\r\n        node = parent_node\r\n      }\r\n\r\n      //如果没有父级说明不是在占位块上移动，则删除占位块并重新生成\r\n      if (!parent_node) {\r\n        //删除之前的占位块\r\n        _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n        //生成一个占位块\r\n        let block_node: any = {\r\n          id: 'block_node',\r\n          title: '占位块',\r\n          name: 'el-row',\r\n          props: {},\r\n          style:\r\n            'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n        }\r\n\r\n        //插入到元素内部\r\n        if (node.children) {\r\n          node.children.push(block_node)\r\n        } else {\r\n          //说明是在最外层 添加占位块\r\n          node.push(block_node)\r\n        }\r\n      }\r\n    }\r\n\r\n    //当被拖动元素在节点上释放时\r\n    const handleDropOnNode = (node: any, e: any) => {\r\n      if (node.id == 'block_node') {\r\n        //如果是在占位块上释放，则算是在他父级上释放\r\n        let parent_node = _handleRecursionGetParentNode(\r\n          node,\r\n          props.component_tree_list\r\n        )\r\n        node = parent_node\r\n      }\r\n\r\n      //删除之前的占位块 要在找父级之后，不然占位块都没了，怎么找父级\r\n      _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n      //获取拖动数据\r\n      let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n      if (node.children) {\r\n        //添加到子控件\r\n        node.children.push(node_info)\r\n      } else {\r\n        //放入最外层数组或者是子控件的children数组里面\r\n        node.push(node_info)\r\n      }\r\n\r\n      //设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n    }\r\n\r\n    //是否显示边框线\r\n    const handleShowBorder = (node: any) => {\r\n      let white_list = [\r\n        'el-container',\r\n        'el-row',\r\n        'el-col',\r\n        'el-form',\r\n        'el-form-item',\r\n      ]\r\n\r\n      if (white_list.includes(node.name) && store.state.show_border) {\r\n        return 'padding'\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n\r\n    const handleClick = (e: any) => {\r\n      //递归找id 这里可能点了内部的文字所以要递归找\r\n      const recursionFindNodeId: any = (e: any, level: number = 0) => {\r\n        if (e.target && e.target.id) {\r\n          return e.target.id\r\n        } else if (e.id) {\r\n          return e.id\r\n        } else if (level > 3) {\r\n          //找4层 后返回\r\n          return false\r\n        } else {\r\n          //如果是点击了内部的文字则往上找id\r\n          level++\r\n          return recursionFindNodeId(\r\n            e.target ? e.target.parentElement : e.parentElement,\r\n            level\r\n          )\r\n        }\r\n      }\r\n\r\n      let target_id = recursionFindNodeId(e)\r\n\r\n      if (e.target.className == 'el-switch__core') {\r\n        //如果是开关控件，则是找到他的兄弟节点\r\n        target_id = e.target.parentNode.children[0].id\r\n      } else if (e.target.className == 'el-select__tags') {\r\n        //如果是多选下拉框，则找到他兄弟节点的子节点\r\n        target_id = e.target.parentNode.children[1].children[0].id\r\n      }\r\n\r\n      //选中高亮区域\r\n      if (target_id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(\r\n          target_id,\r\n          data.sotre_component_tree_list\r\n        )\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnterOnNode,\r\n      handleDragOverOnNode,\r\n      handleDropOnNode,\r\n      handleShowBorder,\r\n      handleClick,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./ComponentTree.vue?vue&type=template&id=22b6f52c&scoped=true\"\nimport script from \"./ComponentTree.vue?vue&type=script&lang=ts\"\nexport * from \"./ComponentTree.vue?vue&type=script&lang=ts\"\n\nimport \"./ComponentTree.vue?vue&type=style&index=0&id=22b6f52c&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-22b6f52c\"\n\nexport default script","<template>\r\n  <el-alert v-if=\"show_tips\" title=\"测试版本v1.0.0上线啦\" type=\"success\"></el-alert>\r\n  <el-row class=\"tool-bar\" justify=\"space-between\">\r\n    <el-col :span=\"20\">{{title}}</el-col>\r\n    <el-col :xs=\"4\" :sm=\"4\" :md=\"4\" :lg=\"4\">\r\n      <el-row justify=\"end\">\r\n        <el-col :span=\"6\">\r\n          <!--  设计窗口 -->\r\n          <el-tooltip effect=\"dark\" content=\"设计窗口/切换显示边框\" placement=\"bottom\">\r\n            <svg-icon name=\"layout\" className=\"icon\" @click=\"handleClickToolBtn(1)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <!--  查看代码 -->\r\n          <el-tooltip effect=\"dark\" content=\"查看代码\" placement=\"bottom\">\r\n            <svg-icon name=\"source_code\" className=\"icon\" @click=\"handleClickToolBtn(2)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <!--  清空布局 -->\r\n          <el-tooltip effect=\"dark\" content=\"清空布局\" placement=\"bottom\">\r\n            <svg-icon name=\"clear_layout\" className=\"icon\" @click=\"handleClickToolBtn(3)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <!--  删除控件 -->\r\n          <el-tooltip effect=\"dark\" content=\"删除控件 DELETE\" placement=\"bottom\">\r\n            <svg-icon name=\"delete\" className=\"icon\" @click=\"handleClickToolBtn(4)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n      </el-row>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default defineComponent({\r\n  name: 'ToolBar',\r\n  //组件发出的事件需要定义\r\n  emits: ['handleChangeDesigner', 'handleClearLayout', 'handleDeleteControl'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      title: '设计窗口', //工具栏标题\r\n      show_tips: true, //是否显示提示消息\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      setTimeout(() => {\r\n        data.show_tips = false //隐藏提示消息\r\n      }, 3000)\r\n    })\r\n\r\n    //点击工具栏按钮\r\n    const handleClickToolBtn = (val: number) => {\r\n      switch (val) {\r\n        case 1:\r\n          //原地切换改变显示边框状态\r\n          if (data.title == '设计窗口') {\r\n            store.dispatch('handleChangeShowBorder', !store.state.show_border)\r\n          }\r\n          data.title = '设计窗口'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 2:\r\n          data.title = '查看代码'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 3:\r\n          if (data.title == '设计窗口') {\r\n            //清空布局\r\n            emit('handleClearLayout', val)\r\n          }\r\n          break\r\n        case 4:\r\n          if (data.title == '设计窗口') {\r\n            //删除控件\r\n            emit('handleDeleteControl', val)\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleClickToolBtn,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.tool-bar {\r\n  padding: 10px 20px;\r\n  background: $bg;\r\n  color: $h2c;\r\n}\r\n.icon {\r\n  -webkit-app-region: no-drag;\r\n  width: 20px;\r\n  height: 20px;\r\n  fill: $h3c;\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    fill: $h1c;\r\n  }\r\n}\r\n</style>","\r\nimport { defineComponent, reactive, toRefs, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default defineComponent({\r\n  name: 'ToolBar',\r\n  //组件发出的事件需要定义\r\n  emits: ['handleChangeDesigner', 'handleClearLayout', 'handleDeleteControl'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      title: '设计窗口', //工具栏标题\r\n      show_tips: true, //是否显示提示消息\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      setTimeout(() => {\r\n        data.show_tips = false //隐藏提示消息\r\n      }, 3000)\r\n    })\r\n\r\n    //点击工具栏按钮\r\n    const handleClickToolBtn = (val: number) => {\r\n      switch (val) {\r\n        case 1:\r\n          //原地切换改变显示边框状态\r\n          if (data.title == '设计窗口') {\r\n            store.dispatch('handleChangeShowBorder', !store.state.show_border)\r\n          }\r\n          data.title = '设计窗口'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 2:\r\n          data.title = '查看代码'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 3:\r\n          if (data.title == '设计窗口') {\r\n            //清空布局\r\n            emit('handleClearLayout', val)\r\n          }\r\n          break\r\n        case 4:\r\n          if (data.title == '设计窗口') {\r\n            //删除控件\r\n            emit('handleDeleteControl', val)\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleClickToolBtn,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./ToolBar.vue?vue&type=template&id=1305f1ea&scoped=true\"\nimport script from \"./ToolBar.vue?vue&type=script&lang=ts\"\nexport * from \"./ToolBar.vue?vue&type=script&lang=ts\"\n\nimport \"./ToolBar.vue?vue&type=style&index=0&id=1305f1ea&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1305f1ea\"\n\nexport default script","\r\nimport { defineComponent, reactive, toRefs, nextTick, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n//导入递归组件树\r\nimport ComponentTree from '@/components/ComponentTree.vue'\r\n//导入工具栏\r\nimport ToolBar from '@/components/ToolBar.vue'\r\nimport store from '@/store'\r\n\r\nexport default defineComponent({\r\n  name: 'Designer',\r\n  components: {\r\n    ComponentTree,\r\n    ToolBar,\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _generateCode, //递归生成代码\r\n    } = mixins()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_index: 1, //页面内容 1界面设计 2查看代码\r\n      component_tree_list: store.state.component_tree_list, //组件树\r\n      insert_index: 0, //当前控件插入位置索引\r\n      code: '', //根据组件树生成的代码\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      //监听 键盘按下事件\r\n      document.onkeydown = function (event: any) {\r\n        var e = event || window.event || arguments.callee.caller.arguments[0]\r\n\r\n        if (e && e.keyCode == 46) {\r\n          // 按下DELETE 删除控件\r\n          handleDeleteControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 67) {\r\n          //ctrl+c 复制节点\r\n          handleCopyControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 88) {\r\n          //ctrl+x 剪切节点 先复制后删除\r\n          handleCopyControl()\r\n          handleDeleteControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 86) {\r\n          //ctrl+v 粘贴节点\r\n          handlePasteControl()\r\n        }\r\n      }\r\n    })\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发 console.log('2.控件进入最外层主窗口触发 handleDragEnter')\r\n    const handleDragEnter = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动或停留时触发 console.log('3.控件在最外层主窗口移动或停留时触发 handleDragOver')\r\n    const handleDragOver = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      let flag_position = false //有没有找到元素所在位置标志\r\n\r\n      //循环第一层的元素 判断该当前鼠标位置在对应水平线元素的中线上面还是下面，上面就在上面插入占位块，下面就在下面插入占位块\r\n      for (let i = 0; i < data.component_tree_list.length; i++) {\r\n        const node = data.component_tree_list[i]\r\n        const ele = document.getElementById(node.id) as HTMLElement\r\n        if (i == 0 && e.clientY < ele.offsetTop) {\r\n          //在第一个的上面，插入到最前面\r\n          flag_position = true\r\n          data.insert_index = 0\r\n          break\r\n        } else if (\r\n          e.clientY >= ele.offsetTop &&\r\n          e.clientY < ele.offsetTop + ele.offsetHeight / 2\r\n        ) {\r\n          //在当前元素的水平中线上面\r\n          flag_position = true\r\n          data.insert_index = i\r\n          break\r\n        } else if (\r\n          e.clientY >= ele.offsetTop + ele.offsetHeight / 2 &&\r\n          e.clientY < ele.offsetTop + ele.offsetHeight\r\n        ) {\r\n          //在当前元素的水平中线下面\r\n          flag_position = true\r\n          data.insert_index = i + 1\r\n          break\r\n        } else if (i == data.component_tree_list.length - 1 && !flag_position) {\r\n          //在最后一个的下面，插入的最后面\r\n          data.insert_index = i + 1\r\n          break\r\n        }\r\n      }\r\n\r\n      //递归删除所有占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //生成一个占位块\r\n      let block_node: any = {\r\n        id: 'block_node',\r\n        title: '',\r\n        name: 'el-row',\r\n        props: {},\r\n        style:\r\n          'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n      }\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, block_node)\r\n    }\r\n\r\n    //当被拖动元素没有放下就离开释放区时触发       console.log('4.控件移出最外层主窗口触发 handleDragLeave')\r\n    const handleDragLeave = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区里放下时触发       console.log('5.控件在最外层释放区放下 handleDrop')\r\n    const handleDrop = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      //删除占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //获取拖动数据\r\n      let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, node_info)\r\n\r\n      //设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n    }\r\n\r\n    //点击main\r\n    const handleClick = (e: any) => {\r\n      //点击空白区域\r\n      if (e.target.className == 'el-main') {\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //改变主设计窗口显示内容\r\n    const handleChangeDesigner = (val: number) => {\r\n      //切换显示内容索引\r\n      data.tab_index = val\r\n\r\n      if (val == 2) {\r\n        //隐藏属性栏 设置当前操作对象 暂时先隐藏\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n        //递归生成代码\r\n        data.code = _generateCode(store.state.component_tree_list)\r\n      }\r\n    }\r\n\r\n    //清空布局\r\n    const handleClearLayout = () => {\r\n      store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n\r\n      //这里主要响应对象不能直接赋值[] 会使其响应性失效\r\n      data.component_tree_list.splice(0, data.component_tree_list.length)\r\n    }\r\n\r\n    //删除控件\r\n    const handleDeleteControl = () => {\r\n      if (store.state.current_node_info.id) {\r\n        //递归删除节点及其子节点\r\n        _handleRecursionDelete(\r\n          store.state.current_node_info.id,\r\n          data.component_tree_list\r\n        )\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //复制控件\r\n    const handleCopyControl = () => {\r\n      if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n        //如果当前选中节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.current_node_info)\r\n        )\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n      }\r\n    }\r\n\r\n    const handlePasteControl = () => {\r\n      if (Object.keys(store.state.copy_node_info).length > 0) {\r\n        //如果有复制节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.copy_node_info)\r\n        )\r\n        //白名单 只要在这里面的节点 循环的时候子级的id和父级的相同即可 这样选中子级的时候就等同于选择了父级\r\n        let white_list = ['el-radio-group', 'el-checkbox-group', 'el-select']\r\n        //递归所有children重新生成id方法\r\n        let recursionGenerateNode = (node: any, level: number = 0) => {\r\n          node.id = 'node-' + new Date().getTime() + level\r\n          if (node.children) {\r\n            node.children.forEach((element: any) => {\r\n              if (!white_list.includes(node.name)) {\r\n                //不在白名单里的控件id需要加1\r\n                level++\r\n              }\r\n              recursionGenerateNode(element, level)\r\n            })\r\n          }\r\n          return node\r\n        }\r\n        copy_node_info = recursionGenerateNode(copy_node_info) //递归所有children重新生成id，保证粘贴的都是不一样的元素，不然粘贴的元素就和前面的一样啦\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n        if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n          //放到选中的控件children中\r\n          store.state.current_node_info.children.push(\r\n            store.state.copy_node_info\r\n          )\r\n        } else {\r\n          //放到最外层\r\n          store.state.component_tree_list.push(store.state.copy_node_info)\r\n        }\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnter,\r\n      handleDragOver,\r\n      handleDragLeave,\r\n      handleDrop,\r\n      handleClick,\r\n      handleChangeDesigner,\r\n      handleClearLayout,\r\n      handleDeleteControl,\r\n      handleCopyControl,\r\n      handlePasteControl,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./Designer.vue?vue&type=template&id=d2cfd088\"\nimport script from \"./Designer.vue?vue&type=script&lang=ts\"\nexport * from \"./Designer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport ControlBar from '@/components/ControlBar.vue'\r\nimport AttributeBar from '@/components/AttributeBar.vue'\r\nimport Designer from '@/components/Designer.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ControlBar,\r\n    AttributeBar,\r\n    Designer,\r\n  },\r\n  setup() {\r\n    //定义router\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n\r\n    return { router, route }\r\n  },\r\n})\r\n","import { render } from \"./Index.vue?vue&type=template&id=1a1d33dc&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=1a1d33dc&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1a1d33dc\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ToolBar.vue?vue&type=style&index=0&id=1305f1ea&lang=scss&scoped=true\""],"sourceRoot":""}