{"version":3,"sources":["webpack:///./src/components/ControlBar.vue?0e8d","webpack:///./src/components/AttributeBar.vue?6cf4","webpack:///./src/views/Index.vue?61c3","webpack:///./src/components/ComponentTree.vue?8228","webpack:///./src/views/Index.vue","webpack:///./src/components/ControlBar.vue","webpack:///./node_modules/tslib/tslib.es6.js","webpack:///./src/mixins/index.ts","webpack:///./src/config/components_list.ts","webpack:///./src/components/ControlBar.vue?c6d0","webpack:///./src/components/ControlBar.vue?d82a","webpack:///./src/components/AttributeBar.vue","webpack:///./src/components/AttributeBar.vue?30e0","webpack:///./src/components/AttributeBar.vue?ebad","webpack:///./src/components/Designer.vue","webpack:///./src/components/ComponentTree.vue","webpack:///./src/components/ComponentTree.vue?e5d2","webpack:///./src/components/ComponentTree.vue?d997","webpack:///./src/components/ToolBar.vue","webpack:///./src/components/ToolBar.vue?46b2","webpack:///./src/components/ToolBar.vue?ddc9","webpack:///./src/components/Designer.vue?756d","webpack:///./src/components/Designer.vue?235d","webpack:///./src/views/Index.vue?7ba6","webpack:///./src/views/Index.vue?4e3d","webpack:///./src/components/ToolBar.vue?fac4"],"names":["class","width","style","handleDragEnterContrlList","handleDragEnd","default-openeds","unique-opened","components_list","components","index","title","name","icon","className","type","children","component","i","draggable","handleDragStart","$event","__assign","Object","assign","t","s","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","mixins","_handleRecursionDelete","id","component_tree_list","flag","splice","_handleRecursionGetParentNode","node","parent_node","list","item","_handleRecursionGetNodeByNodeId","find_node","_generateCode","html","level","forEach","element","repeat_space","repeat","start_tag","key","model","props","prop","toString","text","temp_level","direction","allow","gutter","justify","align","span","offset","push","pull","size","plain","round","circle","loading","disabled","autofocus","ref","inline","label","required","value","maxlength","minlength","placeholder","clearable","rows","autosize","readonly","resize","max","min","step","precision","controls","multiple","filterable","format","editable","border","column","setup","store","data","e","Date","getTime","dataTransfer","setData","JSON","stringify","state","render","__scopeId","tab_active_name","node_info","attribute","label-width","handleClickDeleteRadioItem","handleClickAddRadioItem","handleClickDeleteCheckBoxItem","handleClickAddCheckBoxItem","handleClickDeleteSelectItem","handleClickAddSelectItem","val","handleClickDeleteDescriptionsItem","handleClickAddDescriptionsItem","tree","defaultProps","render-after-expand","highlight-current","node-key","indent","default-expand-all","expand-on-click-node","handleClickTreeNode","allow-drop","handleAllowDrop","filter-node-method","handleFilter","handleMouseOverTreeNode","handleMouseOutTreeNode","treeRef","get","current_node_info","set","a","b","document","getElementsByClassName","replace","node_element","getElementById","deep","filter","radio","checkbox","select","descriptions","dispatch","draggingNode","dropNode","contenteditable","handleChangeDesigner","handleClearLayout","handleDeleteControl","tab_index","handleDragEnter","handleDragOver","handleDragLeave","handleDrop","handleClick","code","handleShowBorder","handleDragEnterOnNode","handleDragOverOnNode","handleDropOnNode","start-placeholder","end-placeholder","range-separator","Array","default","proxy","sotre_component_tree_list","show_border","block_node","ele","position_type","clientY","scrollTop","_recursionGetOffsetTop","offsetTop","clientX","scrollLeft","offsetLeft","child","block_parent_node","block_node_index","is_block_node_release","_handleCalcDragInsertIndex","parse","getData","$message","message","_deleteOldNodeInfo","offsetParent","white_list","includes","recursionFindNodeId","target","parentElement","target_id","parentNode","keys","drag_node_info","xs","sm","md","lg","effect","content","placement","handleClickToolBtn","emits","emit","show_tips","setTimeout","ComponentTree","ToolBar","insert_index","onkeydown","event","window","callee","caller","keyCode","ctrlKey","getSelection","handleCopyControl","preventDefault","activeElement","tagName","handlePasteControl","flag_position","mouse_absolute__y","offsetHeight","copy_node_info","ControlBar","AttributeBar","Designer","router","route"],"mappings":"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","file":"js/chunk-646b58d2.52bfcf3e.js","sourcesContent":["export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ControlBar.vue?vue&type=style&index=0&id=1e0459dd&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./AttributeBar.vue?vue&type=style&index=0&id=63b456f7&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Index.vue?vue&type=style&index=0&id=1a1d33dc&lang=scss&scoped=true\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ComponentTree.vue?vue&type=style&index=0&id=28bebbed&lang=scss&scoped=true\"","<template>\r\n  <el-container class=\"container\">\r\n    <control-bar></control-bar>\r\n    <designer></designer>\r\n    <attribute-bar></attribute-bar>\r\n  </el-container>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport ControlBar from '@/components/ControlBar.vue'\r\nimport AttributeBar from '@/components/AttributeBar.vue'\r\nimport Designer from '@/components/Designer.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ControlBar,\r\n    AttributeBar,\r\n    Designer,\r\n  },\r\n  setup() {\r\n    //定义router\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n\r\n    return { router, route }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.container {\r\n  height: 100%;\r\n}\r\n</style>","<template>\r\n  <el-aside width=\"240px\" style=\"background-color: rgb(238, 241, 246)\" @dragenter=\"handleDragEnterContrlList\"\r\n            @dragend=\"handleDragEnd\">\r\n    <el-menu :default-openeds=\"['0']\" :unique-opened=\"true\">\r\n      <template v-for=\"(components,index) in components_list.components\" :key=\"index\">\r\n        <el-sub-menu :index=\"index + ''\">\r\n          <template #title>\r\n            <div class=\"icon-box\">\r\n              <svg-icon :name=\"components.icon\" className=\"icon\" />\r\n              {{components.title}}\r\n            </div>\r\n          </template>\r\n          <el-menu-item-group>\r\n            <template #title>{{components.type}}</template>\r\n            <template v-for=\"(component,i) in components.children\" :key=\"i\">\r\n              <el-menu-item :index=\"index+'-'+i\" :draggable=\"true\" @dragstart=\"handleDragStart(component,$event)\">\r\n                {{component.title}} <span class=\"en-title\">{{component.name}}</span>\r\n              </el-menu-item>\r\n            </template>\r\n          </el-menu-item-group>\r\n        </el-sub-menu>\r\n      </template>\r\n    </el-menu>\r\n  </el-aside>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\n//导入控件列表\r\nimport components_list from '@/config/components_list'\r\n\r\nexport default defineComponent({\r\n  name: 'ControlBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({})\r\n\r\n    //递归删除旧的占位块\r\n    const { _handleRecursionDelete } = mixins()\r\n\r\n    /**\r\n     * 控件拖动开始       console.log('1.拖动控件节点信息 handleDragStart:', component)\r\n     * @param componet 单个控件节点 包含children\r\n     */\r\n    const handleDragStart = (component: any, e: any) => {\r\n      //参考自 https://github.com/OXOYO/X-Page-Editor-Vue/blob/master/example/components/CustomListItem.vue\r\n      // 生成唯一id\r\n      component.id = 'node-' + new Date().getTime()\r\n\r\n      //如果有children children也要加唯一id\r\n      component.children.forEach((children: any) => {\r\n        children.id = 'node-' + new Date().getTime()\r\n      })\r\n\r\n      //设置拖拽数据\r\n      e.dataTransfer.setData('node', JSON.stringify(component))\r\n    }\r\n\r\n    /**\r\n     * 拖入控件栏，用于删除组件树内的占位块 console.log('7.拖入控件栏，用于删除组件树内的占位块 handleDragEnterContrlList')\r\n     */\r\n    const handleDragEnterContrlList = (e: any) => {\r\n      _handleRecursionDelete('block_node', store.state.component_tree_list)\r\n    }\r\n\r\n    /**\r\n     * 放开拖动元素 删除占位块\r\n     */\r\n    const handleDragEnd = (e: any) => {\r\n      _handleRecursionDelete('block_node', store.state.component_tree_list)\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      components_list,\r\n      handleDragStart,\r\n      handleDragEnterContrlList,\r\n      handleDragEnd,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.icon {\r\n  width: 16px;\r\n  height: 16px;\r\n  fill: $h3c;\r\n}\r\n.en-title {\r\n  color: $h3c;\r\n  font-size: 12px;\r\n}\r\n</style>","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","const mixins: any = () => {\r\n  //递归删除指定id的节点及其子节点\r\n  const _handleRecursionDelete: any = (\r\n    id: any,\r\n    component_tree_list: any,\r\n    flag: any = false\r\n  ) => {\r\n    for (let i = component_tree_list.length - 1; i >= 0; i--) {\r\n      //找到了节点\r\n      if (component_tree_list[i].id == id) {\r\n        //删除并返回\r\n        component_tree_list.splice(i, 1)\r\n        flag = true\r\n        break\r\n      } else {\r\n        // 继续遍历子级\r\n        if (\r\n          component_tree_list[i].children &&\r\n          component_tree_list[i].children.length > 0\r\n        ) {\r\n          flag = _handleRecursionDelete(\r\n            id,\r\n            component_tree_list[i].children,\r\n            flag\r\n          )\r\n          if (flag) {\r\n            //如果删除了，则终止递归\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return flag\r\n  }\r\n\r\n  //递归查找父级节点 一级节点是list 内层节点是Object\r\n  const _handleRecursionGetParentNode: any = (\r\n    node: any,\r\n    component_tree_list: any,\r\n    parent_node: any = null\r\n  ) => {\r\n    //list\r\n    let list =\r\n      typeof component_tree_list.children != 'undefined'\r\n        ? component_tree_list.children\r\n        : component_tree_list\r\n    for (const item of list) {\r\n      if (item.id == node.id) {\r\n        //这个是父级children\r\n        parent_node = component_tree_list\r\n        break\r\n      } else {\r\n        //这里有个问题 如果children是空的\r\n        if (item.children && item.children.length > 0) {\r\n          parent_node = _handleRecursionGetParentNode(node, item, parent_node)\r\n          if (parent_node) {\r\n            //如果找到了终止递归\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return parent_node\r\n  }\r\n\r\n  //递归根据节点id查找节点信息\r\n  const _handleRecursionGetNodeByNodeId: any = (\r\n    id: any,\r\n    component_tree_list: any,\r\n    find_node: null\r\n  ) => {\r\n    for (const item of component_tree_list) {\r\n      if (item.id == id) {\r\n        find_node = item\r\n        break\r\n      } else {\r\n        if (item.children && item.children.length > 0) {\r\n          find_node = _handleRecursionGetNodeByNodeId(\r\n            id,\r\n            item.children,\r\n            find_node\r\n          )\r\n          if (find_node) {\r\n            //如果找到了终止递归\r\n            break\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return find_node\r\n  }\r\n\r\n  const _generateCode = (\r\n    component_tree_list: any,\r\n    html: string = '',\r\n    level: number = 0\r\n  ) => {\r\n    component_tree_list.forEach((element: any) => {\r\n      let repeat_space = '' //缩进换行\r\n      if (level > 0) {\r\n        repeat_space = ' '.repeat(level * 2) //按子级嵌套层次 重复缩进\r\n      }\r\n      let start_tag = repeat_space + '<' + element.name //开始标签的左半边名称\r\n      /****这里开始添加属性****/\r\n      //model属性单独添加\r\n      if (element.model && element.model != '') {\r\n        start_tag += ' :model=\"' + element.model + '\"'\r\n      }\r\n\r\n      for (const key in element.props) {\r\n        const prop: any = element.props[key]\r\n        //特殊属性判断\r\n        //el-input rows属性 不是textarea的时候不需要加这个属性\r\n        if (\r\n          element.name == 'el-input' &&\r\n          element.props['type'] != 'textarea' &&\r\n          (key as string) == 'rows'\r\n        ) {\r\n          continue\r\n        }\r\n\r\n        //其他正常判断\r\n        if (typeof prop == 'string' && prop != '') {\r\n          start_tag += ' ' + key + '=\"' + prop + '\"'\r\n        }\r\n        if (typeof prop == 'number' && prop != 0) {\r\n          start_tag += ' :' + key + '=\"' + prop + '\"'\r\n        }\r\n        if (typeof prop == 'boolean' && prop) {\r\n          start_tag += ' :' + key + '=\"' + prop.toString() + '\"'\r\n        }\r\n      }\r\n\r\n      //style 单独添加\r\n      if (element.style && element.style != '') {\r\n        start_tag += ' style=\"' + element.style + '\"'\r\n      }\r\n      /****添加属性结束****/\r\n\r\n      html += start_tag + '>\\n' //开始标签左半边加属性加右半边\r\n      //渲染内部文本内容 el-button\r\n      if (element.text && element.text != '') {\r\n        html += '   ' + repeat_space + element.text + '\\n'\r\n      }\r\n      switch (element.name) {\r\n        case 'el-select':\r\n          //未实现\r\n          break\r\n        default:\r\n          break\r\n      }\r\n      if (element.children && element.children.length > 0) {\r\n        //记录递归前的层级\r\n        let temp_level = level\r\n        level++\r\n        //递归嵌套组件\r\n        html = _generateCode(element.children, html, level)\r\n        //递归完了赋值递归前的层级\r\n        level = temp_level\r\n      }\r\n      //标签尾部\r\n      html += repeat_space + '</' + element.name + '>\\n'\r\n    })\r\n    return html\r\n  }\r\n\r\n  return {\r\n    _handleRecursionDelete,\r\n    _handleRecursionGetParentNode,\r\n    _handleRecursionGetNodeByNodeId,\r\n    _generateCode\r\n  }\r\n}\r\nexport default mixins\r\n","/**\r\n数据结构\r\n{\r\n  components: [\r\n    {\r\n      title: '大标题',\r\n      type: '英文标题+类型',\r\n      children: [\r\n        //子控件\r\n        {\r\n          name: '组件名称',\r\n          title: '组件标题',\r\n          props: '组件属性',\r\n          text: '内部文字',\r\n          value:'只是用于绑定设计窗口的变量',\r\n          style: '内联样式',\r\n          allow:false,//是否允许有子控件\r\n          children: [],//子节点\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n */\r\nconst components_list: any = {\r\n  components: [\r\n    {\r\n      title: '基础',\r\n      type: 'Basic',\r\n      icon: 'basic',\r\n      children: [\r\n        {\r\n          name: 'el-container',\r\n          title: '布局容器',\r\n          props: {\r\n            direction: 'horizontal'\r\n          },\r\n          style: '',\r\n          allow: true,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-row',\r\n          title: '行',\r\n          props: {\r\n            gutter: 0,\r\n            justify: '',\r\n            align: '',\r\n            class: ''\r\n          },\r\n          text: '',\r\n          style: '',\r\n          allow: true,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-col',\r\n          title: '列',\r\n          props: {\r\n            span: 3,\r\n            offset: 0,\r\n            push: 0,\r\n            pull: 0,\r\n            class: ''\r\n          },\r\n          text: '',\r\n          style: '',\r\n          allow: true,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-button',\r\n          title: '按钮',\r\n          props: {\r\n            size: 'medium',\r\n            type: 'primary',\r\n            plain: false,\r\n            round: false,\r\n            circle: false,\r\n            loading: false,\r\n            disabled: false,\r\n            icon: '',\r\n            autofocus: false,\r\n            class: ''\r\n          },\r\n          text: '按钮',\r\n          style: '',\r\n          allow: false,\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: '表单',\r\n      type: 'Form',\r\n      icon: 'form',\r\n      children: [\r\n        {\r\n          name: 'el-form',\r\n          title: '表单',\r\n          props: {\r\n            ref: 'ruleForm',\r\n            'label-position': 'right',\r\n            'label-width': '100px',\r\n            inline: false,\r\n            size: 'medium',\r\n            disabled: false\r\n          },\r\n          model: '',\r\n          style: '',\r\n          allow: true,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-form-item',\r\n          title: '表单项',\r\n          props: {\r\n            prop: '',\r\n            label: '标签名',\r\n            required: false\r\n          },\r\n          style: '',\r\n          allow: true,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-radio-group',\r\n          title: '单选框组',\r\n          props: {\r\n            'v-model': '',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          allow: false,\r\n          children: [\r\n            {\r\n              name: 'el-radio',\r\n              title: '单选按钮',\r\n              props: {\r\n                label: '1'\r\n              },\r\n              text: '选项1',\r\n              style: '',\r\n              allow: false,\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-radio',\r\n              title: '单选按钮',\r\n              props: {\r\n                label: '2'\r\n              },\r\n              text: '选项2',\r\n              style: '',\r\n              allow: false,\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'el-checkbox-group',\r\n          title: '复选框组',\r\n          props: {\r\n            'v-model': '',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          allow: false,\r\n          children: [\r\n            {\r\n              name: 'el-checkbox',\r\n              title: '复选框',\r\n              props: {\r\n                label: '1'\r\n              },\r\n              text: '复选框A',\r\n              style: '',\r\n              allow: false,\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-checkbox',\r\n              title: '复选框',\r\n              props: {\r\n                label: '2'\r\n              },\r\n              text: '复选框B',\r\n              style: '',\r\n              allow: false,\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'el-input',\r\n          title: '输入框',\r\n          props: {\r\n            'v-model': '',\r\n            type: 'text',\r\n            maxlength: 0,\r\n            minlength: 0,\r\n            placeholder: '请输入',\r\n            clearable: false,\r\n            'show-password': false,\r\n            rows: 2,\r\n            autosize: false,\r\n            readonly: false,\r\n            resize: 'none',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          allow: false,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-input-number',\r\n          title: '计数器',\r\n          props: {\r\n            'v-model': '',\r\n            max: 99999999,\r\n            min: 0,\r\n            step: 1,\r\n            'step-strictly': false,\r\n            precision: 0,\r\n            disabled: false,\r\n            controls: true,\r\n            placeholder: '请输入数值'\r\n          },\r\n          value: 0,\r\n          style: '',\r\n          allow: false,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-select',\r\n          title: '选择器',\r\n          props: {\r\n            'v-model': '',\r\n            multiple: false,\r\n            disabled: false,\r\n            clearable: false,\r\n            'collapse-tags': false,\r\n            filterable: false,\r\n            placeholder: '请选择'\r\n          },\r\n          value: '',\r\n          style: '',\r\n          allow: false,\r\n          children: [\r\n            {\r\n              name: 'el-option',\r\n              title: '选项',\r\n              props: {\r\n                label: '黄金糕',\r\n                value: '1'\r\n              },\r\n              style: '',\r\n              text: '黄金糕1',\r\n              allow: false,\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-option',\r\n              title: '选项',\r\n              props: {\r\n                label: '双皮奶',\r\n                value: '2'\r\n              },\r\n              style: '',\r\n              text: '双皮奶1',\r\n              allow: false,\r\n              children: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          name: 'el-switch',\r\n          title: '开关',\r\n          props: {\r\n            'v-model': '',\r\n            disabled: false\r\n          },\r\n          value: '',\r\n          style: '',\r\n          allow: false,\r\n          children: []\r\n        },\r\n        {\r\n          name: 'el-date-picker',\r\n          title: '日期选择器',\r\n          props: {\r\n            'v-model': '',\r\n            type: 'date',\r\n            format: 'YYYY-MM-DD',\r\n            readonly: false,\r\n            disabled: false,\r\n            editable: true,\r\n            clearable: true,\r\n            placeholder: '',\r\n            'start-placeholder': '开始日期',\r\n            'end-placeholder': '结束日期',\r\n            'range-separator': '至'\r\n          },\r\n          value: '',\r\n          style: '',\r\n          allow: false,\r\n          children: []\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: '数据',\r\n      type: 'Data',\r\n      icon: 'data',\r\n      children: [\r\n        {\r\n          name: 'el-descriptions',\r\n          title: '描述列表',\r\n          props: {\r\n            border: true,\r\n            column: 3,\r\n            direction: 'horizontal',\r\n            size: 'medium',\r\n            title: '标题文本'\r\n          },\r\n          style: '',\r\n          allow: false,\r\n          children: [\r\n            {\r\n              name: 'el-descriptions-item',\r\n              props: {\r\n                label: '标签一',\r\n                span: 1,\r\n                width: '',\r\n                'min-width': '',\r\n                align: '',\r\n                'label-align': ''\r\n              },\r\n              text: '内容一',\r\n              style: '',\r\n              allow: false,\r\n              children: []\r\n            },\r\n            {\r\n              name: 'el-descriptions-item',\r\n              props: {\r\n                label: '标签二',\r\n                span: 1,\r\n                width: '',\r\n                'min-width': '',\r\n                align: '',\r\n                'label-align': ''\r\n              },\r\n              text: '内容二',\r\n              style: '',\r\n              allow: false,\r\n              children: []\r\n            }\r\n          ]\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\nexport default components_list\r\n","\r\nimport { defineComponent, reactive, toRefs } from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\n//导入控件列表\r\nimport components_list from '@/config/components_list'\r\n\r\nexport default defineComponent({\r\n  name: 'ControlBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({})\r\n\r\n    //递归删除旧的占位块\r\n    const { _handleRecursionDelete } = mixins()\r\n\r\n    /**\r\n     * 控件拖动开始       console.log('1.拖动控件节点信息 handleDragStart:', component)\r\n     * @param componet 单个控件节点 包含children\r\n     */\r\n    const handleDragStart = (component: any, e: any) => {\r\n      //参考自 https://github.com/OXOYO/X-Page-Editor-Vue/blob/master/example/components/CustomListItem.vue\r\n      // 生成唯一id\r\n      component.id = 'node-' + new Date().getTime()\r\n\r\n      //如果有children children也要加唯一id\r\n      component.children.forEach((children: any) => {\r\n        children.id = 'node-' + new Date().getTime()\r\n      })\r\n\r\n      //设置拖拽数据\r\n      e.dataTransfer.setData('node', JSON.stringify(component))\r\n    }\r\n\r\n    /**\r\n     * 拖入控件栏，用于删除组件树内的占位块 console.log('7.拖入控件栏，用于删除组件树内的占位块 handleDragEnterContrlList')\r\n     */\r\n    const handleDragEnterContrlList = (e: any) => {\r\n      _handleRecursionDelete('block_node', store.state.component_tree_list)\r\n    }\r\n\r\n    /**\r\n     * 放开拖动元素 删除占位块\r\n     */\r\n    const handleDragEnd = (e: any) => {\r\n      _handleRecursionDelete('block_node', store.state.component_tree_list)\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      components_list,\r\n      handleDragStart,\r\n      handleDragEnterContrlList,\r\n      handleDragEnd,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./ControlBar.vue?vue&type=template&id=1e0459dd&scoped=true\"\nimport script from \"./ControlBar.vue?vue&type=script&lang=ts\"\nexport * from \"./ControlBar.vue?vue&type=script&lang=ts\"\n\nimport \"./ControlBar.vue?vue&type=style&index=0&id=1e0459dd&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1e0459dd\"\n\nexport default script","<template>\r\n  <el-aside class=\"attribute-bar\" width=\"400px\">\r\n    <el-tabs v-model=\"tab_active_name\">\r\n      <el-tab-pane name=\"1\">\r\n        <template #label>\r\n          <div class=\"icon-box tab-label\">\r\n            <svg-icon name=\"attribute\" className=\"icon\" />控件属性\r\n          </div>\r\n        </template>\r\n        <h4>{{node_info.title}}</h4>\r\n        <el-form ref=\"attribute\" :model=\"attribute\" label-width=\"68px\">\r\n          <!-- el-container start -->\r\n          <template v-if=\"node_info.name == 'el-container'\">\r\n            <el-form-item v-if=\"attribute.direction||attribute.direction==''\" label=\"排列方向\">\r\n              <el-select v-model=\"attribute.direction\" placeholder=\"排列方向\" clearable>\r\n                <el-option key=\"horizontal \" label=\"水平\" value=\"horizontal \"></el-option>\r\n                <el-option key=\"vertical\" label=\"垂直\" value=\"vertical\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-container end -->\r\n          <!-- el-row start -->\r\n          <template v-if=\"node_info.name == 'el-row'\">\r\n            <el-form-item v-if=\"node_info.text||node_info.text==''\" label=\"文本\">\r\n              <el-input v-model=\"node_info.text\" placeholder=\"内部文本内容\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.gutter||attribute.gutter==0\" label=\"栅格间隔\">\r\n              <el-input-number v-model=\"attribute.gutter\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.justify||attribute.justify==''\" label=\"水平对齐\">\r\n              <el-select v-model=\"attribute.justify\" placeholder=\"水平对齐\" clearable>\r\n                <el-option key=\"start\" label=\"左对齐\" value=\"start\"></el-option>\r\n                <el-option key=\"center\" label=\"居中\" value=\"center\"></el-option>\r\n                <el-option key=\"end\" label=\"右对齐\" value=\"end\"></el-option>\r\n                <el-option key=\"space-around\" label=\"两端对齐(around)\" value=\"space-around\"></el-option>\r\n                <el-option key=\"space-between\" label=\"两端对齐(between)\" value=\"space-between\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.align||attribute.align==''\" label=\"垂直对齐\">\r\n              <el-select v-model=\"attribute.align\" placeholder=\"垂直对齐\" clearable>\r\n                <el-option key=\"top\" label=\"顶部\" value=\"top\"></el-option>\r\n                <el-option key=\"middle\" label=\"居中\" value=\"middle\"></el-option>\r\n                <el-option key=\"bottom\" label=\"底部\" value=\"bottom\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-row end -->\r\n          <!-- el-col start -->\r\n          <template v-if=\"node_info.name == 'el-col'\">\r\n            <el-form-item v-if=\"node_info.text||node_info.text==''\" label=\"文本\">\r\n              <el-input v-model=\"node_info.text\" placeholder=\"内部文本内容\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.span\" label=\"栅格列数\">\r\n              <el-input-number v-model=\"attribute.span\" :controls=\"true\" :min=\"1\" :max=\"24\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.offset||attribute.offset==0\" label=\"左侧间隔\">\r\n              <el-input-number v-model=\"attribute.offset\" :controls=\"true\" :min=\"0\" :max=\"24\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.push||attribute.push==0\" label=\"向右移动\">\r\n              <el-input-number v-model=\"attribute.push\" :controls=\"true\" :min=\"0\" :max=\"24\"\r\n                               :disabled=\"attribute.pull>0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.pull||attribute.pull==0\" label=\"向左移动\">\r\n              <el-input-number v-model=\"attribute.pull\" :controls=\"true\" :min=\"0\" :max=\"24\"\r\n                               :disabled=\"attribute.push>0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-col end -->\r\n          <!-- el-button start -->\r\n          <template v-if=\"node_info.name == 'el-button'\">\r\n            <el-form-item v-if=\"node_info.text||node_info.text==''\" label=\"文本\">\r\n              <el-input v-model=\"node_info.text\" placeholder=\"内部文本内容\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.size||attribute.size==''\" label=\"尺寸\">\r\n              <el-select v-model=\"attribute.size\" placeholder=\"尺寸\" clearable>\r\n                <el-option key=\"medium\" label=\"正常\" value=\"medium\"></el-option>\r\n                <el-option key=\"small\" label=\"小\" value=\"small\"></el-option>\r\n                <el-option key=\"mini\" label=\"迷你\" value=\"mini\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-select v-model=\"attribute.type\" placeholder=\"类型\" clearable>\r\n                <el-option key=\"default\" label=\"默认\" value=\"default\"></el-option>\r\n                <el-option key=\"primary\" label=\"主要\" value=\"primary\"></el-option>\r\n                <el-option key=\"success\" label=\"成功\" value=\"success\"></el-option>\r\n                <el-option key=\"warning\" label=\"警告\" value=\"warning\"></el-option>\r\n                <el-option key=\"danger\" label=\"危险\" value=\"danger\"></el-option>\r\n                <el-option key=\"info\" label=\"信息\" value=\"info\"></el-option>\r\n                <el-option key=\"text\" label=\"文本\" value=\"text\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"朴素按钮\">\r\n              <el-switch v-model=\"attribute.plain\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"圆角按钮\">\r\n              <el-switch v-model=\"attribute.round\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"圆形按钮\">\r\n              <el-switch v-model=\"attribute.circle\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"加载中\">\r\n              <el-switch v-model=\"attribute.loading\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.icon||attribute.icon==''\" label=\"图标类名\">\r\n              <el-input v-model=\"attribute.icon\" placeholder=\"图标类名\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"自动聚焦\">\r\n              <el-switch v-model=\"attribute.autofocus\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-button end -->\r\n          <!-- el-form-item start -->\r\n          <template v-if=\"node_info.name == 'el-form'\">\r\n            <el-form-item v-if=\"node_info.model||node_info.model==''\" label=\"表单对象\">\r\n              <el-input v-model=\"node_info.model\" placeholder=\"表单对象 form\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.ref||attribute.ref==''\" label=\"ref\">\r\n              <el-input v-model=\"attribute.ref\" placeholder=\"ref\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"行内表单\">\r\n              <el-switch v-model=\"attribute.inline\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute['label-position']||attribute['label-position']==''\" label=\"标签位置\">\r\n              <el-select v-model=\"attribute['label-position']\" placeholder=\"标签位置\" clearable>\r\n                <el-option key=\"left\" label=\"左对齐\" value=\"left\"></el-option>\r\n                <el-option key=\"top\" label=\"顶部对齐\" value=\"top\"></el-option>\r\n                <el-option key=\"right\" label=\"右对齐\" value=\"right\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute['label-width']||attribute['label-width']==''\" label=\"标签宽度\">\r\n              <el-input v-model=\"attribute['label-width']\" placeholder=\"标签宽度 100px\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.size||attribute.size==''\" label=\"尺寸\">\r\n              <el-select v-model=\"attribute.size\" placeholder=\"尺寸\" clearable>\r\n                <el-option key=\"medium\" label=\"正常\" value=\"medium\"></el-option>\r\n                <el-option key=\"small\" label=\"小\" value=\"small\"></el-option>\r\n                <el-option key=\"mini\" label=\"迷你\" value=\"mini\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-form-item end -->\r\n          <!-- el-form-item start -->\r\n          <template v-if=\"node_info.name == 'el-form-item'\">\r\n            <el-form-item v-if=\"attribute.prop||attribute.prop==''\" label=\"属性字段\">\r\n              <el-input v-model=\"attribute.prop\" placeholder=\"属性字段 prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.label||attribute.label==''\" label=\"标签\">\r\n              <el-input v-model=\"attribute.label\" placeholder=\"标签\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"必填\">\r\n              <el-switch v-model=\"attribute.required\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-form-item end -->\r\n          <!-- el-radio-group start -->\r\n          <template v-if=\"node_info.name == 'el-radio-group'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"选项设置\">\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row>\r\n                  <el-col :span=\"10\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"名称\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"8\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteRadioItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddRadioItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-radio-group end -->\r\n          <!-- el-checkbox-group start -->\r\n          <template v-if=\"node_info.name == 'el-checkbox-group'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"选项设置\">\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row>\r\n                  <el-col :span=\"10\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"名称\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"8\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteCheckBoxItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddCheckBoxItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-checkbox-group end -->\r\n          <!-- el-input start -->\r\n          <template v-if=\"node_info.name == 'el-input'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-select v-model=\"attribute.type\" placeholder=\"类型\" clearable>\r\n                <el-option key=\"text\" label=\"文本\" value=\"text\"></el-option>\r\n                <el-option key=\"number\" label=\"数字\" value=\"number\"></el-option>\r\n                <el-option key=\"password\" label=\"密码\" value=\"password\"></el-option>\r\n                <el-option key=\"textarea\" label=\"文本域\" value=\"textarea\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.maxlength||attribute.maxlength==0\" label=\"最大长度\">\r\n              <el-input-number v-model=\"attribute.maxlength\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.minlength||attribute.minlength==0\" label=\"最小长度\">\r\n              <el-input-number v-model=\"attribute.minlength\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n              <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"清空\">\r\n              <el-switch v-model=\"attribute.clearable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"密文\">\r\n              <el-switch v-model=\"attribute['show-password']\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type == 'textarea'&&(attribute.rows||attribute.rows==0)\" label=\"输入行数\">\r\n              <el-input-number v-model=\"attribute.rows\" :controls=\"true\" :min=\"2\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type == 'textarea'\" label=\"自动高度\">\r\n              <el-switch v-model=\"attribute.autosize\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type == 'textarea'\" label=\"缩放\">\r\n              <el-select v-model=\"attribute.resize\" placeholder=\"缩放\" clearable>\r\n                <el-option key=\"none\" label=\"无缩放\" value=\"none\"></el-option>\r\n                <el-option key=\"both\" label=\"全部缩放\" value=\"both\"></el-option>\r\n                <el-option key=\"horizontal\" label=\"水平缩放\" value=\"horizontal\"></el-option>\r\n                <el-option key=\"vertical\" label=\"垂直缩放\" value=\"vertical\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"只读\">\r\n              <el-switch v-model=\"attribute.readonly\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-input end -->\r\n          <!-- el-input-number start -->\r\n          <template v-if=\"node_info.name == 'el-input-number'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.max||attribute.max==0\" label=\"最大值\">\r\n              <el-input-number v-model=\"attribute.max\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.min||attribute.min==0\" label=\"最小值\">\r\n              <el-input-number v-model=\"attribute.min\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.step||attribute.step==0\" label=\"步长\">\r\n              <el-input-number v-model=\"attribute.step\" :controls=\"true\" :min=\"1\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"输入倍数\">\r\n              <el-switch v-model=\"attribute['step-strictly']\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.precision||attribute.precision==0\" label=\"精度\">\r\n              <el-input-number v-model=\"attribute.precision\" :controls=\"true\" :min=\"0\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"控制按钮\">\r\n              <el-switch v-model=\"attribute.controls\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n              <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-input-number end -->\r\n          <!-- el-select start -->\r\n          <template v-if=\"node_info.name == 'el-select'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label-width=\"0\">\r\n              <el-row>\r\n                <label class=\"el-form-item__label\" style=\"width: 68px;\">选项设置</label>\r\n              </el-row>\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row>\r\n                  <el-col :span=\"7\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"下拉值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"7\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"显示值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-input size=\"small\" v-model=\"item.props.value\" placeholder=\"值\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"3\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteSelectItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddSelectItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n            <el-form-item label=\"多选\">\r\n              <el-switch v-model=\"attribute.multiple\" @change=\"((val)=>{\r\n                          if(val){\r\n                            node_info.value = []\r\n                          }else{\r\n                            node_info.value = ''\r\n                            attribute['collapse-tags'] = false\r\n                          }\r\n                         })\">\r\n              </el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"清空\">\r\n              <el-switch v-model=\"attribute.clearable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.multiple\" label=\"多选合并\">\r\n              <el-switch v-model=\"attribute['collapse-tags']\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"搜索\">\r\n              <el-switch v-model=\"attribute.filterable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n              <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-select end -->\r\n          <!-- el-switch start -->\r\n          <template v-if=\"node_info.name == 'el-switch'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-switch end -->\r\n          <!-- el-date-picker start -->\r\n          <template v-if=\"node_info.name == 'el-date-picker'\">\r\n            <el-form-item v-if=\"attribute['v-model']||attribute['v-model'] == ''\" label=\"绑定变量\">\r\n              <el-input v-model=\"attribute['v-model']\" placeholder=\"绑定变量 form.prop\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.type||attribute.type==''\" label=\"类型\">\r\n              <el-select v-model=\"attribute.type\" placeholder=\"请选择选择器类型\" @change=\"node_info.value = ''\" clearable>\r\n                <el-option key=\"year\" label=\"年\" value=\"year\"></el-option>\r\n                <el-option key=\"month\" label=\"月\" value=\"month\"></el-option>\r\n                <el-option key=\"date\" label=\"日\" value=\"date\"></el-option>\r\n                <el-option key=\"dates\" label=\"日（多选带确定按钮）\" value=\"dates\"></el-option>\r\n                <el-option key=\"datetime\" label=\"日期时间\" value=\"datetime\"></el-option>\r\n                <el-option key=\"datetimerange\" label=\"日期时间范围\" value=\"datetimerange\"></el-option>\r\n                <el-option key=\"daterange\" label=\"日期范围\" value=\"daterange\"></el-option>\r\n                <el-option key=\"monthrange\" label=\"月份范围\" value=\"monthrange\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.format||attribute.format==''\" label=\"日期格式\">\r\n              <el-input v-model=\"attribute.format\" placeholder=\"日期格式\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item label=\"只读\">\r\n              <el-switch v-model=\"attribute.readonly\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"禁用\">\r\n              <el-switch v-model=\"attribute.disabled\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"编辑\">\r\n              <el-switch v-model=\"attribute.editable\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item label=\"清空\">\r\n              <el-switch v-model=\"attribute.clearable\"></el-switch>\r\n            </el-form-item>\r\n            <template v-if=\"attribute.type=='year' || attribute.type=='month' || attribute.type=='date' \r\n                  || attribute.type=='dates'|| attribute.type=='datetime'\">\r\n              <el-form-item v-if=\"attribute.placeholder||attribute.placeholder==''\" label=\"占位文本\">\r\n                <el-input v-model=\"attribute.placeholder\" placeholder=\"占位文本\" clearable></el-input>\r\n              </el-form-item>\r\n            </template>\r\n            <template v-else>\r\n              <el-form-item v-if=\"attribute['start-placeholder']||attribute['start-placeholder']==''\" label=\"开始占位\">\r\n                <el-input v-model=\"attribute['start-placeholder']\" placeholder=\"范围开始占位\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item v-if=\"attribute['end-placeholder']||attribute['end-placeholder']==''\" label=\"结束占位\">\r\n                <el-input v-model=\"attribute['end-placeholder']\" placeholder=\"范围结束占位\" clearable></el-input>\r\n              </el-form-item>\r\n              <el-form-item v-if=\"attribute['range-separator']||attribute['range-separator']==''\" label=\"分隔符\">\r\n                <el-input v-model=\"attribute['range-separator']\" placeholder=\"范围分隔符\" clearable></el-input>\r\n              </el-form-item>\r\n            </template>\r\n          </template>\r\n          <!-- el-date-picker end -->\r\n          <!-- el-el-descriptions start -->\r\n          <template v-if=\"node_info.name == 'el-descriptions'\">\r\n            <!-- 渲染选项 -->\r\n            <el-form-item label=\"边框\">\r\n              <el-switch v-model=\"attribute.border\"></el-switch>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.column\" label=\"项数\">\r\n              <!-- 感觉5项差不多了，再多不好了 -->\r\n              <el-input-number v-model=\"attribute.column\" :controls=\"true\" :min=\"1\" :max=\"5\">\r\n              </el-input-number>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.direction||attribute.direction==''\" label=\"排列方向\">\r\n              <el-select v-model=\"attribute.direction\" placeholder=\"排列方向\" clearable>\r\n                <el-option key=\"horizontal \" label=\"水平\" value=\"horizontal \"></el-option>\r\n                <el-option key=\"vertical\" label=\"垂直\" value=\"vertical\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.size||attribute.size==''\" label=\"尺寸\">\r\n              <el-select v-model=\"attribute.size\" placeholder=\"尺寸\" clearable>\r\n                <el-option key=\"medium\" label=\"正常\" value=\"medium\"></el-option>\r\n                <el-option key=\"small\" label=\"小\" value=\"small\"></el-option>\r\n                <el-option key=\"mini\" label=\"迷你\" value=\"mini\"></el-option>\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item v-if=\"attribute.title||attribute.title==''\" label=\"标题文本\">\r\n              <el-input v-model=\"attribute.title\" placeholder=\"标题文本\" clearable></el-input>\r\n            </el-form-item>\r\n            <el-form-item :label-width=\"0\">\r\n              <el-row>\r\n                <label class=\"el-form-item__label\" style=\"width: 68px;\">选项设置</label>\r\n              </el-row>\r\n              <template v-for=\"(item,index) in node_info.children\" :key=\"index\">\r\n                <el-row class=\"el-desc-item-top\">\r\n                  <el-col :span=\"9\">\r\n                    <el-input size=\"small\" v-model=\"item.props.label\" placeholder=\"选项标签\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"9\" :offset=\"1\">\r\n                    <el-select v-model=\"item.props['label-align']\" placeholder=\"标签对齐\" clearable>\r\n                      <el-option key=\"left\" label=\"左\" value=\"left\"></el-option>\r\n                      <el-option key=\"center\" label=\"中\" value=\"center\"></el-option>\r\n                      <el-option key=\"right\" label=\"右\" value=\"right\"></el-option>\r\n                    </el-select>\r\n                  </el-col>\r\n                </el-row>\r\n                <el-row class=\"el-desc-item\">\r\n                  <el-col :span=\"9\">\r\n                    <el-input size=\"small\" v-model=\"item.text\" placeholder=\"选项内容\" clearable></el-input>\r\n                  </el-col>\r\n                  <el-col :span=\"9\" :offset=\"1\">\r\n                    <el-select v-model=\"item.props.align\" placeholder=\"内容对齐\" clearable>\r\n                      <el-option key=\"left\" label=\"左\" value=\"left\"></el-option>\r\n                      <el-option key=\"center\" label=\"中\" value=\"center\"></el-option>\r\n                      <el-option key=\"right\" label=\"右\" value=\"right\"></el-option>\r\n                    </el-select>\r\n                  </el-col>\r\n                  <el-col :span=\"4\" :offset=\"1\">\r\n                    <el-button v-if=\"index > 1\" size=\"mini\" type=\"danger\"\r\n                               @click=\"handleClickDeleteDescriptionsItem(node_info,index)\">\r\n                      <svg-icon name=\"minus\" className=\"icon\" />\r\n                    </el-button>\r\n                  </el-col>\r\n                </el-row>\r\n              </template>\r\n              <el-row>\r\n                <el-col :span=\"4\" :offset=\"1\">\r\n                  <el-button size=\"mini\" type=\"primary\" @click=\"handleClickAddDescriptionsItem(node_info)\">\r\n                    <svg-icon name=\"plus\" className=\"icon\" />\r\n                  </el-button>\r\n                </el-col>\r\n              </el-row>\r\n            </el-form-item>\r\n          </template>\r\n          <!-- el-descriptions end -->\r\n          <!-- public attribute start-->\r\n          <el-form-item v-if=\"attribute.class||attribute.class==''\" label=\"class\">\r\n            <el-input v-model=\"attribute.class\" placeholder=\"css类名\" clearable></el-input>\r\n          </el-form-item>\r\n          <el-form-item v-if=\"node_info.style||node_info.style==''\" label=\"行内样式\">\r\n            <el-input type=\"textarea\" v-model=\"node_info.style\" placeholder=\"行内样式\" autosize clearable></el-input>\r\n          </el-form-item>\r\n          <!-- public attribute end-->\r\n        </el-form>\r\n      </el-tab-pane>\r\n      <el-tab-pane label=\"节点树\" name=\"2\">\r\n        <template #label>\r\n          <div class=\"icon-box tab-label\">\r\n            <svg-icon name=\"tree\" className=\"icon\" />节点树\r\n          </div>\r\n        </template>\r\n        <el-tree ref=\"treeRef\" :data=\"tree\" :props=\"defaultProps\" :render-after-expand=\"false\" :highlight-current=\"true\"\r\n                 node-key=\"id\" :indent=\"32\" :default-expand-all=\"true\" :expand-on-click-node=\"false\"\r\n                 @node-click=\"handleClickTreeNode\" draggable :allow-drop=\"handleAllowDrop\"\r\n                 :filter-node-method=\"handleFilter\">\r\n          <template #=\"{ node, data }\">\r\n            <!-- 用于显示内容 -->\r\n            <div class=\"custom-tree-node\">\r\n              {{data.name}}\r\n            </div>\r\n            <!-- 用于触发事件 机智 -->\r\n            <div class=\"custom-tree-node-block\" @mouseover=\"handleMouseOverTreeNode(node,data)\"\r\n                 @mouseout=\"handleMouseOutTreeNode(node,data)\">用于触发事件 机智</div>\r\n          </template>\r\n        </el-tree>\r\n      </el-tab-pane>\r\n    </el-tabs>\r\n\r\n  </el-aside>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {\r\n  getCurrentInstance,\r\n  defineComponent,\r\n  reactive,\r\n  toRefs,\r\n  computed,\r\n  watch,\r\n  nextTick,\r\n  ref,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'AttributeBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //当前组件实例\r\n    const { proxy } = getCurrentInstance() as any\r\n\r\n    //ref\r\n    const treeRef: any = ref(null)\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_active_name: '1', //激活的tab栏\r\n      tree: store.state.component_tree_list, //节点树\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name',\r\n      }, //节点树 属性\r\n    })\r\n\r\n    const {\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //当前操作控件信息\r\n    const node_info: any = computed({\r\n      get() {\r\n        return store.state.current_node_info\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //计算属性\r\n    const attribute: any = computed({\r\n      get() {\r\n        return store.state.current_node_info.props\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //属性改变每次设置高亮 不然高亮边框会消失\r\n    watch(\r\n      attribute,\r\n      (a: any, b: any) => {\r\n        //过滤节点树\r\n        nextTick(() => {\r\n          //清除高亮边框\r\n          let border = document.getElementsByClassName(\r\n            'border'\r\n          )[0] as HTMLElement\r\n          if (border) {\r\n            border.className = border.className.replace(' border', '')\r\n          }\r\n\r\n          //高亮控件边框\r\n          let node_element = document.getElementById(\r\n            store.state.current_node_info.id\r\n          ) as HTMLElement\r\n          if (node_element) {\r\n            node_element.className = node_element.className + ' border'\r\n          }\r\n        })\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    watch(store.state.component_tree_list, (val: any) => {\r\n      nextTick(() => {\r\n        //过滤节点树\r\n        treeRef.value.filter()\r\n      })\r\n    })\r\n\r\n    //点击添加单选按钮选项\r\n    const handleClickAddRadioItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-radio',\r\n        title: '单选按钮',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除单选按钮选项\r\n    const handleClickDeleteRadioItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加复选框选项\r\n    const handleClickAddCheckBoxItem = (node_info: any) => {\r\n      //初始化\r\n      let checkbox: any = {\r\n        name: 'el-checkbox',\r\n        title: '复选框',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      checkbox.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(checkbox)\r\n    }\r\n\r\n    //点击删除复选框选项\r\n    const handleClickDeleteCheckBoxItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加选择器选项\r\n    const handleClickAddSelectItem = (node_info: any) => {\r\n      //初始化\r\n      let select: any = {\r\n        name: 'el-option',\r\n        title: '选项',\r\n        props: {\r\n          label: '',\r\n          value: '',\r\n        },\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      select.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(select)\r\n    }\r\n\r\n    //点击删除选择器选项\r\n    const handleClickDeleteSelectItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添描述列表选项\r\n    const handleClickAddDescriptionsItem = (node_info: any) => {\r\n      //初始化\r\n      let descriptions: any = {\r\n        name: 'el-descriptions-item',\r\n        props: {\r\n          label: '',\r\n          span: 1,\r\n          width: '',\r\n          'min-width': '',\r\n          align: '',\r\n          'label-align': '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      descriptions.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(descriptions)\r\n    }\r\n\r\n    //点击删除描述列表选项\r\n    const handleClickDeleteDescriptionsItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击节点树节点\r\n    const handleClickTreeNode = (val: any) => {\r\n      //选中高亮区域\r\n      if (val.id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(val.id, data.tree)\r\n\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName(\r\n          'hover-border'\r\n        )[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' hover-border', '')\r\n        }\r\n\r\n        //清除高亮边框\r\n        border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    //鼠标移入节点树节点，显示边框\r\n    const handleMouseOverTreeNode = (node: any, data: any) => {\r\n      if (data.id) {\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(data.id) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' hover-border'\r\n        }\r\n      }\r\n    }\r\n    //鼠标移除节点树节点隐藏边框\r\n    const handleMouseOutTreeNode = (node: any, data: any) => {\r\n      //清除高亮边框\r\n      let border = document.getElementsByClassName(\r\n        'hover-border'\r\n      )[0] as HTMLElement\r\n      if (border) {\r\n        border.className = border.className.replace(' hover-border', '')\r\n      }\r\n    }\r\n\r\n    //判断目标节点是否接受放置内容\r\n    const handleAllowDrop = (draggingNode: any, dropNode: any, type: any) => {\r\n      if (type == 'inner' && !dropNode.data.allow) {\r\n        //不允许拖入内部\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n    //过滤节点\r\n    const handleFilter = (value: any, data: any) => {\r\n      if (\r\n        data.name == 'el-radio' ||\r\n        data.name == 'el-checkbox' ||\r\n        data.name == 'el-option'\r\n      ) {\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      treeRef,\r\n      node_info,\r\n      attribute,\r\n      handleClickAddRadioItem,\r\n      handleClickDeleteRadioItem,\r\n      handleClickAddCheckBoxItem,\r\n      handleClickDeleteCheckBoxItem,\r\n      handleClickAddSelectItem,\r\n      handleClickDeleteSelectItem,\r\n      handleClickAddDescriptionsItem,\r\n      handleClickDeleteDescriptionsItem,\r\n      handleClickTreeNode,\r\n      handleMouseOverTreeNode,\r\n      handleMouseOutTreeNode,\r\n      handleAllowDrop,\r\n      handleFilter,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.attribute-bar {\r\n  padding: 20px;\r\n  background: #ffffff;\r\n  border-left: 1px solid #e6e6e6;\r\n  .icon {\r\n    fill: $white;\r\n  }\r\n  .tab-label {\r\n    .icon {\r\n      fill: $h3c;\r\n    }\r\n  }\r\n  .custom-tree-node {\r\n    flex: 1;\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 14px;\r\n    height: 100%;\r\n  }\r\n  .custom-tree-node-block {\r\n    position: absolute;\r\n    opacity: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    margin: auto;\r\n  }\r\n  .el-desc-item-top {\r\n    padding-top: 6px;\r\n    border-top: 1px solid #ececec;\r\n  }\r\n  .el-desc-item {\r\n    padding-top: 2px;\r\n    padding-bottom: 6px;\r\n  }\r\n}\r\n</style>","\r\nimport {\r\n  getCurrentInstance,\r\n  defineComponent,\r\n  reactive,\r\n  toRefs,\r\n  computed,\r\n  watch,\r\n  nextTick,\r\n  ref,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'AttributeBar',\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    //当前组件实例\r\n    const { proxy } = getCurrentInstance() as any\r\n\r\n    //ref\r\n    const treeRef: any = ref(null)\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_active_name: '1', //激活的tab栏\r\n      tree: store.state.component_tree_list, //节点树\r\n      defaultProps: {\r\n        children: 'children',\r\n        label: 'name',\r\n      }, //节点树 属性\r\n    })\r\n\r\n    const {\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //当前操作控件信息\r\n    const node_info: any = computed({\r\n      get() {\r\n        return store.state.current_node_info\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //计算属性\r\n    const attribute: any = computed({\r\n      get() {\r\n        return store.state.current_node_info.props\r\n      },\r\n      set(val) {},\r\n    })\r\n\r\n    //属性改变每次设置高亮 不然高亮边框会消失\r\n    watch(\r\n      attribute,\r\n      (a: any, b: any) => {\r\n        //过滤节点树\r\n        nextTick(() => {\r\n          //清除高亮边框\r\n          let border = document.getElementsByClassName(\r\n            'border'\r\n          )[0] as HTMLElement\r\n          if (border) {\r\n            border.className = border.className.replace(' border', '')\r\n          }\r\n\r\n          //高亮控件边框\r\n          let node_element = document.getElementById(\r\n            store.state.current_node_info.id\r\n          ) as HTMLElement\r\n          if (node_element) {\r\n            node_element.className = node_element.className + ' border'\r\n          }\r\n        })\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    watch(store.state.component_tree_list, (val: any) => {\r\n      nextTick(() => {\r\n        //过滤节点树\r\n        treeRef.value.filter()\r\n      })\r\n    })\r\n\r\n    //点击添加单选按钮选项\r\n    const handleClickAddRadioItem = (node_info: any) => {\r\n      //初始化\r\n      let radio: any = {\r\n        name: 'el-radio',\r\n        title: '单选按钮',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      radio.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(radio)\r\n    }\r\n\r\n    //点击删除单选按钮选项\r\n    const handleClickDeleteRadioItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加复选框选项\r\n    const handleClickAddCheckBoxItem = (node_info: any) => {\r\n      //初始化\r\n      let checkbox: any = {\r\n        name: 'el-checkbox',\r\n        title: '复选框',\r\n        props: {\r\n          label: '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      checkbox.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(checkbox)\r\n    }\r\n\r\n    //点击删除复选框选项\r\n    const handleClickDeleteCheckBoxItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添加选择器选项\r\n    const handleClickAddSelectItem = (node_info: any) => {\r\n      //初始化\r\n      let select: any = {\r\n        name: 'el-option',\r\n        title: '选项',\r\n        props: {\r\n          label: '',\r\n          value: '',\r\n        },\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      select.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(select)\r\n    }\r\n\r\n    //点击删除选择器选项\r\n    const handleClickDeleteSelectItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击添描述列表选项\r\n    const handleClickAddDescriptionsItem = (node_info: any) => {\r\n      //初始化\r\n      let descriptions: any = {\r\n        name: 'el-descriptions-item',\r\n        props: {\r\n          label: '',\r\n          span: 1,\r\n          width: '',\r\n          'min-width': '',\r\n          align: '',\r\n          'label-align': '',\r\n        },\r\n        text: '',\r\n        style: '',\r\n        children: [],\r\n      }\r\n\r\n      descriptions.id = 'node-' + new Date().getTime()\r\n\r\n      node_info.children.push(descriptions)\r\n    }\r\n\r\n    //点击删除描述列表选项\r\n    const handleClickDeleteDescriptionsItem = (node_info: any, index: any) => {\r\n      node_info.children.splice(index, 1)\r\n    }\r\n\r\n    //点击节点树节点\r\n    const handleClickTreeNode = (val: any) => {\r\n      //选中高亮区域\r\n      if (val.id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(val.id, data.tree)\r\n\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName(\r\n          'hover-border'\r\n        )[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' hover-border', '')\r\n        }\r\n\r\n        //清除高亮边框\r\n        border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    //鼠标移入节点树节点，显示边框\r\n    const handleMouseOverTreeNode = (node: any, data: any) => {\r\n      if (data.id) {\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(data.id) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' hover-border'\r\n        }\r\n      }\r\n    }\r\n    //鼠标移除节点树节点隐藏边框\r\n    const handleMouseOutTreeNode = (node: any, data: any) => {\r\n      //清除高亮边框\r\n      let border = document.getElementsByClassName(\r\n        'hover-border'\r\n      )[0] as HTMLElement\r\n      if (border) {\r\n        border.className = border.className.replace(' hover-border', '')\r\n      }\r\n    }\r\n\r\n    //判断目标节点是否接受放置内容\r\n    const handleAllowDrop = (draggingNode: any, dropNode: any, type: any) => {\r\n      if (type == 'inner' && !dropNode.data.allow) {\r\n        //不允许拖入内部\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    }\r\n\r\n    //过滤节点\r\n    const handleFilter = (value: any, data: any) => {\r\n      if (\r\n        data.name == 'el-radio' ||\r\n        data.name == 'el-checkbox' ||\r\n        data.name == 'el-option'\r\n      ) {\r\n        return false\r\n      }\r\n      return true\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      treeRef,\r\n      node_info,\r\n      attribute,\r\n      handleClickAddRadioItem,\r\n      handleClickDeleteRadioItem,\r\n      handleClickAddCheckBoxItem,\r\n      handleClickDeleteCheckBoxItem,\r\n      handleClickAddSelectItem,\r\n      handleClickDeleteSelectItem,\r\n      handleClickAddDescriptionsItem,\r\n      handleClickDeleteDescriptionsItem,\r\n      handleClickTreeNode,\r\n      handleMouseOverTreeNode,\r\n      handleMouseOutTreeNode,\r\n      handleAllowDrop,\r\n      handleFilter,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./AttributeBar.vue?vue&type=template&id=63b456f7&scoped=true\"\nimport script from \"./AttributeBar.vue?vue&type=script&lang=ts\"\nexport * from \"./AttributeBar.vue?vue&type=script&lang=ts\"\n\nimport \"./AttributeBar.vue?vue&type=style&index=0&id=63b456f7&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-63b456f7\"\n\nexport default script","<template>\r\n  <el-container style=\"height:calc(100vh - 40px);background-color: rgb(255, 255, 255);\">\r\n    <el-container style=\"flex-direction: column;\">\r\n      <tool-bar @handleChangeDesigner=\"handleChangeDesigner\" @handleClearLayout=\"handleClearLayout\"\r\n                @handleDeleteControl=\"handleDeleteControl\"> </tool-bar>\r\n      <el-main id=\"desginer\" v-if=\"tab_index == 1\" @dragenter=\"handleDragEnter\" @dragover=\"handleDragOver\"\r\n               @dragleave=\"handleDragLeave\" @drop=\"handleDrop\" @click=\"handleClick\">\r\n        <!-- 使用递归组件 -->\r\n        <component-tree :component_tree_list=\"component_tree_list\"></component-tree>\r\n      </el-main>\r\n      <el-main v-if=\"tab_index == 2\" v-highlightjs>\r\n        <h5 v-if=\"code!=''\">html</h5>\r\n        <pre v-if=\"code!=''\"><code class=\"language-html\" contenteditable=\"true\">{{code}}</code></pre>\r\n      </el-main>\r\n    </el-container>\r\n  </el-container>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {\r\n  defineComponent,\r\n  reactive,\r\n  toRefs,\r\n  nextTick,\r\n  onMounted,\r\n  ref,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n//导入递归组件树\r\nimport ComponentTree from '@/components/ComponentTree.vue'\r\n//导入工具栏\r\nimport ToolBar from '@/components/ToolBar.vue'\r\nimport store from '@/store'\r\n\r\nexport default defineComponent({\r\n  name: 'Designer',\r\n  components: {\r\n    ComponentTree,\r\n    ToolBar,\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _generateCode, //递归生成代码\r\n    } = mixins()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_index: 1, //页面内容 1界面设计 2查看代码\r\n      component_tree_list: store.state.component_tree_list, //组件树\r\n      insert_index: 0, //当前控件插入位置索引\r\n      code: '', //根据组件树生成的代码\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      //监听 键盘按下事件\r\n      document.onkeydown = function (event: any) {\r\n        var e = event || window.event || arguments.callee.caller.arguments[0]\r\n\r\n        if (e && e.keyCode == 46) {\r\n          // 按下DELETE 删除控件\r\n          handleDeleteControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 67) {\r\n          //ctrl+c 复制节点\r\n          //判断是否是浏览器默认快捷键 原理：判断是否选中了内容\r\n          let content = (<any>window).getSelection().toString()\r\n          if (!content) {\r\n            //不是系统快捷键\r\n            //复制控件\r\n            handleCopyControl()\r\n            e.preventDefault()\r\n          }\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 88) {\r\n          //ctrl+x 剪切节点 先复制后删除\r\n          //判断是否是浏览器默认快捷键 原理：判断是否选中了内容\r\n          let content = (<any>window).getSelection().toString()\r\n          if (!content) {\r\n            //不是系统快捷键\r\n            handleCopyControl()\r\n            handleDeleteControl()\r\n          }\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 86) {\r\n          //ctrl+v 粘贴节点\r\n          if (\r\n            (document.activeElement as HTMLElement).tagName != 'INPUT' &&\r\n            (document.activeElement as HTMLElement).tagName != 'TEXTAREA'\r\n          ) {\r\n            handlePasteControl()\r\n            e.preventDefault()\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发 console.log('2.控件进入最外层主窗口触发 handleDragEnter')\r\n    const handleDragEnter = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动或停留时触发 console.log('3.控件在最外层主窗口移动或停留时触发 handleDragOver')\r\n    const handleDragOver = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      let flag_position = false //有没有找到元素所在位置标志\r\n      let mouse_absolute__y =\r\n        e.clientY +\r\n        (document.getElementById('desginer') as HTMLElement).scrollTop //鼠标在设计窗口的绝对位置\r\n\r\n      //循环第一层的元素 判断该当前鼠标位置在对应水平线元素的中线上面还是下面，上面就在上面插入占位块，下面就在下面插入占位块\r\n      for (let i = 0; i < data.component_tree_list.length; i++) {\r\n        const node = data.component_tree_list[i]\r\n        const ele = document.getElementById(node.id) as HTMLElement\r\n        if (i == 0 && mouse_absolute__y < ele.offsetTop) {\r\n          //在第一个的上面，插入到最前面\r\n          flag_position = true\r\n          data.insert_index = 0\r\n          break\r\n        } else if (mouse_absolute__y < ele.offsetTop + ele.offsetHeight / 2) {\r\n          //在当前元素的水平中线上面\r\n          flag_position = true\r\n          data.insert_index = i\r\n          break\r\n        } else if (i == data.component_tree_list.length - 1 && !flag_position) {\r\n          //在最后一个的下面，插入的最后面\r\n          data.insert_index = i + 1\r\n          break\r\n        }\r\n      }\r\n\r\n      //递归删除所有占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //生成一个占位块\r\n      let block_node: any = {\r\n        id: 'block_node',\r\n        title: '',\r\n        name: 'el-row',\r\n        props: {},\r\n        style:\r\n          'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n      }\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, block_node)\r\n    }\r\n\r\n    //当被拖动元素没有放下就离开释放区时触发       console.log('4.控件移出最外层主窗口触发 handleDragLeave')\r\n    const handleDragLeave = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区里放下时触发       console.log('5.控件在最外层释放区放下 handleDrop')\r\n    const handleDrop = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      //删除占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //获取拖动数据\r\n      let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n      //删除旧节点\r\n      _deleteOldNodeInfo()\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, node_info)\r\n\r\n      //设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n    }\r\n\r\n    //点击main\r\n    const handleClick = (e: any) => {\r\n      //点击空白区域\r\n      if (e.target.className == 'el-main') {\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //改变主设计窗口显示内容\r\n    const handleChangeDesigner = (val: number) => {\r\n      //切换显示内容索引\r\n      data.tab_index = val\r\n\r\n      if (val == 2) {\r\n        //隐藏属性栏 设置当前操作对象 暂时先隐藏\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n        //递归生成代码\r\n        data.code = _generateCode(store.state.component_tree_list)\r\n      }\r\n    }\r\n\r\n    //清空布局\r\n    const handleClearLayout = () => {\r\n      store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n\r\n      //这里主要响应对象不能直接赋值[] 会使其响应性失效\r\n      data.component_tree_list.splice(0, data.component_tree_list.length)\r\n    }\r\n\r\n    //删除控件\r\n    const handleDeleteControl = () => {\r\n      if (store.state.current_node_info.id) {\r\n        //递归删除节点及其子节点\r\n        _handleRecursionDelete(\r\n          store.state.current_node_info.id,\r\n          data.component_tree_list\r\n        )\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //复制控件\r\n    const handleCopyControl = () => {\r\n      if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n        //如果当前选中节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.current_node_info)\r\n        )\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n      }\r\n    }\r\n\r\n    const handlePasteControl = () => {\r\n      if (Object.keys(store.state.copy_node_info).length > 0) {\r\n        //如果有复制节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.copy_node_info)\r\n        )\r\n        //白名单 只要在这里面的节点 循环的时候子级的id和父级的相同即可 这样选中子级的时候就等同于选择了父级\r\n        let white_list = [\r\n          'el-radio-group',\r\n          'el-checkbox-group',\r\n          'el-select',\r\n          'el-descriptions',\r\n        ]\r\n        //递归所有children重新生成id方法\r\n        let recursionGenerateNode = (node: any, level: number = 0) => {\r\n          node.id = 'node-' + new Date().getTime() + level\r\n          if (node.children && node.children.length > 0) {\r\n            node.children.forEach((element: any) => {\r\n              if (!white_list.includes(node.name)) {\r\n                //不在白名单里的控件id需要加1\r\n                level++\r\n              }\r\n              recursionGenerateNode(element, level)\r\n              //循环完成还得增加以下，不然这次循环和上次循环的id一样了\r\n              level++\r\n            })\r\n          }\r\n          return node\r\n        }\r\n        copy_node_info = recursionGenerateNode(copy_node_info) //递归所有children重新生成id，保证粘贴的都是不一样的元素，不然粘贴的元素就和前面的一样啦\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n        if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n          //放到选中的控件children中\r\n          store.state.current_node_info.children.push(\r\n            store.state.copy_node_info\r\n          )\r\n        } else {\r\n          //放到最外层\r\n          store.state.component_tree_list.push(store.state.copy_node_info)\r\n        }\r\n      }\r\n    }\r\n\r\n    //设计窗口内拖拽删除旧节点方法\r\n    const _deleteOldNodeInfo = () => {\r\n      //判断是否是设计窗口内控件拖拽\r\n      if (Object.keys(store.state.drag_node_info).length > 0) {\r\n        //删除之前的控件\r\n        _handleRecursionDelete(\r\n          store.state.drag_node_info.id,\r\n          data.component_tree_list\r\n        )\r\n        //设置当前拖动对象\r\n        store.dispatch('handleChangeDragNodeInfo', {})\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnter,\r\n      handleDragOver,\r\n      handleDragLeave,\r\n      handleDrop,\r\n      handleClick,\r\n      handleChangeDesigner,\r\n      handleClearLayout,\r\n      handleDeleteControl,\r\n      handleCopyControl,\r\n      handlePasteControl,\r\n    }\r\n  },\r\n})\r\n</script>\r\n","<template>\r\n  <!-- 递归循环渲染组件树 -->\r\n  <template v-for=\"(node, index) in component_tree_list\" :key=\"node.id + index\">\r\n    <!-- 日期控件加属性和选择有问题单独处理 -->\r\n    <template v-if=\"node.name =='el-date-picker'\">\r\n      <div style=\"display:inline-block;\" :id=\"node.id\" :class=\"handleShowBorder(node)\" :draggable=\"true\"\r\n           @dragstart.stop=\"handleDragStart(node,$event)\" @dragend=\"handleDragEnd\"\r\n           @dragenter.stop.prevent=\"handleDragEnterOnNode\" @dragover.stop.prevent=\"handleDragOverOnNode(node,$event)\"\r\n           @drop.stop.prevent=\"handleDropOnNode(node, $event)\" @click.stop.prevent=\"handleClick\">\r\n        <component :is=\"node.name\" v-model=\"node.value\" :type=\"node.props.type\" :readonly=\"node.props.readonly\"\r\n                   :disabled=\"node.props.disabled\" :editable=\"node.props.editable\" :clearable=\"node.props.clearable\"\r\n                   :placeholder=\"node.props.placeholder\" :start-placeholder=\"node.props['start-placeholder']\"\r\n                   :end-placeholder=\"node.props['end-placeholder']\" :range-separator=\"node.props['range-separator']\"\r\n                   :style=\"node.style\">\r\n        </component>\r\n      </div>\r\n    </template>\r\n    <!-- 描述列表渲染子级有bug目前无法解决 单独处理-->\r\n    <template v-else-if=\"node.name == 'el-descriptions'\">\r\n      <component :id=\"node.id\" :is=\"node.name\" v-bind=\"node.props\" v-model=\"node.value\" :class=\"handleShowBorder(node)\"\r\n                 :style=\"node.style\" :draggable=\"true\" @dragstart.stop=\"handleDragStart(node,$event)\"\r\n                 @dragend=\"handleDragEnd\" @dragenter.stop.prevent=\"handleDragEnterOnNode\"\r\n                 @dragover.stop.prevent=\"handleDragOverOnNode(node,$event)\"\r\n                 @drop.stop.prevent=\"handleDropOnNode(node, $event)\" @click.stop.prevent=\"handleClick\">\r\n        <template v-for=\"(node, index) in node.children\" :key=\"node.id + index\">\r\n          <component :id=\"node.id\" :is=\"node.name\" v-bind=\"node.props\" v-model=\"node.value\"\r\n                     :class=\"handleShowBorder(node)\" :style=\"node.style\" :draggable=\"true\"\r\n                     @dragstart.stop=\"handleDragStart(node,$event)\" @dragend=\"handleDragEnd\"\r\n                     @dragenter.stop.prevent=\"handleDragEnterOnNode\"\r\n                     @dragover.stop.prevent=\"handleDragOverOnNode(node,$event)\"\r\n                     @drop.stop.prevent=\"handleDropOnNode(node, $event)\" @click.stop.prevent=\"handleClick\">\r\n            {{node.text}}\r\n            <template v-if=\"node.children\">\r\n              <component-tree :component_tree_list=\"node.children\"></component-tree>\r\n            </template>\r\n          </component>\r\n        </template>\r\n      </component>\r\n    </template>\r\n    <!-- 其他控件没问题 -->\r\n    <template v-else>\r\n      <component :id=\"node.id\" :is=\"node.name\" v-bind=\"node.props\" v-model=\"node.value\" :class=\"handleShowBorder(node)\"\r\n                 :style=\"node.style\" :draggable=\"true\" @dragstart.stop=\"handleDragStart(node,$event)\"\r\n                 @dragend=\"handleDragEnd\" @dragenter.stop.prevent=\"handleDragEnterOnNode\"\r\n                 @dragover.stop.prevent=\"handleDragOverOnNode(node,$event)\"\r\n                 @drop.stop.prevent=\"handleDropOnNode(node, $event)\" @click.stop.prevent=\"handleClick\">\r\n        {{node.text}}\r\n        <template v-if=\"node.children\">\r\n          <component-tree :component_tree_list=\"node.children\"></component-tree>\r\n        </template>\r\n      </component>\r\n    </template>\r\n  </template>\r\n</template>\r\n<script lang=\"ts\">\r\nimport {\r\n  defineComponent,\r\n  reactive,\r\n  getCurrentInstance,\r\n  toRefs,\r\n  nextTick,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'ComponentTree',\r\n  props: {\r\n    //表格数据\r\n    component_tree_list: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      },\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //当前组件实例\r\n    const { proxy } = getCurrentInstance() as any\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      sotre_component_tree_list: store.state.component_tree_list, //组件树\r\n      show_border: true, //是否显示边框线\r\n    })\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _handleRecursionGetParentNode, //递归查找父级节点\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发  console.log('6.控件进入子控件触发 handleDragEnterOnNode')\r\n    const handleDragEnterOnNode = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动时触发   console.log('7.控件进入子控件触发 handleDragOverOnNode')\r\n    const handleDragOverOnNode = (node: any, e: any) => {\r\n      //如果是在占位块上移动，则算是在他父级上移动,且占位块不发生任何变化\r\n      let parent_node: any = null\r\n\r\n      if (node.id == 'block_node') {\r\n        parent_node = _handleRecursionGetParentNode(\r\n          node,\r\n          data.sotre_component_tree_list\r\n        )\r\n        node = parent_node\r\n      }\r\n\r\n      //如果没有父级说明不是在占位块上移动，则删除占位块并重新生成\r\n      if (!parent_node) {\r\n        //删除之前的占位块\r\n        _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n        //生成一个占位块\r\n        let block_node: any = {\r\n          id: 'block_node',\r\n          title: '占位块',\r\n          name: 'el-row',\r\n          props: {},\r\n          style:\r\n            'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n        }\r\n\r\n        //插入到元素内部\r\n        if (node.children) {\r\n          //判断是否是在最外层的边界，如果在最外层的边界移动，那么插入到对应的最外层索引后\r\n          const ele = document.getElementById(node.id) as HTMLElement\r\n\r\n          //落在边界还是内部 边界的话可以换顺序 内部的话直接扔进去\r\n          let position_type = 0 //0内部 1上下边界 2左右边界\r\n          //这里>=2和<=2是为了放大边界，不然会有bug\r\n          if (\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop >=\r\n              _recursionGetOffsetTop(ele).offsetTop - 2 &&\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop <=\r\n              _recursionGetOffsetTop(ele).offsetTop + 2\r\n          ) {\r\n            //落在上下边界上\r\n            position_type = 1\r\n          } else if (\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft >=\r\n              _recursionGetOffsetTop(ele).offsetLeft - 2 &&\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft <=\r\n              _recursionGetOffsetTop(ele).offsetLeft + 2\r\n          ) {\r\n            //落在左右边界上 获取当前元素的父级\r\n            position_type = 2\r\n          } else {\r\n            //落在内部\r\n            position_type = 0\r\n          }\r\n          //根据落在哪里的类型插入元素\r\n          if (position_type == 1 || position_type == 2) {\r\n            //落在上下边界上 获取当前元素的父级\r\n            parent_node = _handleRecursionGetParentNode(\r\n              node,\r\n              data.sotre_component_tree_list\r\n            )\r\n            if (parent_node.children) {\r\n              //说明在内 二层及以上\r\n              parent_node = parent_node.children\r\n            }\r\n            //当前鼠标所在元素边界元素索引\r\n            let index = 0\r\n            for (let i = 0; i < parent_node.length; i++) {\r\n              const child = parent_node[i]\r\n              if (child.id == node.id) {\r\n                index = i\r\n                break\r\n              }\r\n            }\r\n            parent_node.splice(index, 0, block_node)\r\n          } else {\r\n            //插入到内部\r\n            node.children.push(block_node)\r\n          }\r\n        } else {\r\n          //说明是在最外层 添加占位块\r\n          node.push(block_node)\r\n        }\r\n      }\r\n    }\r\n\r\n    //当被拖动元素在节点上释放时\r\n    const handleDropOnNode = (node: any, e: any) => {\r\n      nextTick(() => {\r\n        //当前元素的父节点\r\n        let parent_node: any = null\r\n        //占位块的父节点\r\n        let block_parent_node: any = null\r\n        //是否放在内层的占位块上 占位块的索引\r\n        let block_node_index = 0\r\n        //是否放在内层的占位块上\r\n        let is_block_node_release = false\r\n        if (node.id == 'block_node') {\r\n          //如果是在占位块上释放，则算是在他父级上释放\r\n          parent_node = _handleRecursionGetParentNode(\r\n            node,\r\n            data.sotre_component_tree_list\r\n          )\r\n          //直接找到占位块释放的索引index start\r\n          is_block_node_release = true\r\n          block_parent_node = parent_node.children\r\n            ? parent_node.children\r\n            : parent_node\r\n          for (let i = 0; i < block_parent_node.length; i++) {\r\n            const child = block_parent_node[i]\r\n            if (child.id == node.id) {\r\n              block_node_index = i\r\n              //判断是否是设计窗口内上拖还是下拖 还是控件栏拖入 计算插入的索引\r\n              block_node_index = _handleCalcDragInsertIndex(\r\n                block_node_index,\r\n                parent_node\r\n              )\r\n              break\r\n            }\r\n          }\r\n          //直接找到占位块释放的index end\r\n          node = parent_node\r\n        }\r\n\r\n        //删除之前的占位块 要在找父级之后，不然占位块都没了，怎么找父级  必须要删掉 不然会闪一下\r\n        _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n        //获取拖动数据\r\n        let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n        if (is_block_node_release) {\r\n          if (parent_node.children) {\r\n            if (node.allow) {\r\n              //判断是否是自己拖到自己\r\n              if (node.id == node_info.id) {\r\n                proxy.$message({\r\n                  message: '禁止拖入自身',\r\n                  type: 'warning',\r\n                })\r\n                return false\r\n              }\r\n              //删除旧节点\r\n              _deleteOldNodeInfo()\r\n              //插入到内部\r\n              parent_node.children.splice(block_node_index, 0, node_info)\r\n            } else {\r\n              node_info = { props: {} }\r\n            }\r\n          } else {\r\n            //删除旧节点\r\n            _deleteOldNodeInfo()\r\n            //最外层\r\n            parent_node.splice(block_node_index, 0, node_info)\r\n          }\r\n\r\n          //设置当前操作对象\r\n          store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n          return\r\n        }\r\n\r\n        if (node.children) {\r\n          //判断是否是在最外层的边界，如果在最外层的边界移动，那么插入到对应的最外层索引后\r\n          const ele = document.getElementById(node.id) as HTMLElement\r\n          //落在边界还是内部 边界的话可以换顺序 内部的话直接扔进去\r\n          let position_type = 0 //0内部 1上下边界 2左右边界\r\n          //这里>=2和<=2是为了放大边界，不然会有bug\r\n          if (\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop >=\r\n              _recursionGetOffsetTop(ele).offsetTop - 2 &&\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop <=\r\n              _recursionGetOffsetTop(ele).offsetTop + 2\r\n          ) {\r\n            //落在上下边界上\r\n            position_type = 1\r\n          } else if (\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft >=\r\n              _recursionGetOffsetTop(ele).offsetLeft - 2 &&\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft <=\r\n              _recursionGetOffsetTop(ele).offsetLeft + 2\r\n          ) {\r\n            //落在左右边界上 获取当前元素的父级\r\n            position_type = 2\r\n          } else {\r\n            //落在内部\r\n            position_type = 0\r\n          }\r\n          //同样放大边界\r\n          if (position_type == 1 || position_type == 2) {\r\n            //落在边界上 获取当前元素的父级\r\n            parent_node = _handleRecursionGetParentNode(\r\n              node,\r\n              data.sotre_component_tree_list\r\n            )\r\n            if (parent_node.children) {\r\n              //说明在内 二层及以上\r\n              parent_node = parent_node.children\r\n            }\r\n            //当前鼠标所在元素边界元素索引\r\n            let index = 0\r\n            for (let i = 0; i < parent_node.length; i++) {\r\n              const child = parent_node[i]\r\n              if (child.id == node.id) {\r\n                index = i\r\n                break\r\n              }\r\n            }\r\n            //删除旧节点\r\n            _deleteOldNodeInfo()\r\n            parent_node.splice(index, 0, node_info)\r\n          } else {\r\n            if (node.allow) {\r\n              //判断是否是自己拖到自己\r\n              if (node.id == node_info.id) {\r\n                proxy.$message({\r\n                  message: '禁止拖入自身',\r\n                  type: 'warning',\r\n                })\r\n                return false\r\n              }\r\n              //删除旧节点\r\n              _deleteOldNodeInfo()\r\n              //插入到内部\r\n              node.children.push(node_info)\r\n            } else {\r\n              node_info = { props: {} }\r\n              proxy.$message({\r\n                message: '禁止拖入',\r\n                type: 'warning',\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          //删除旧节点\r\n          _deleteOldNodeInfo()\r\n          //放入最外层数组\r\n          node.push(node_info)\r\n        }\r\n\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n      })\r\n    }\r\n\r\n    //递归获取当前元素距离最外层父元素的距离\r\n    const _recursionGetOffsetTop = (ele: any) => {\r\n      let offsetTop = ele.offsetTop //获取该元素对应父容器的上边距\r\n      let offsetLeft = ele.offsetLeft //对应父容器的上边距\r\n      //判断是否有父容器，如果存在则累加其边距\r\n      while ((ele = ele.offsetParent)) {\r\n        //等效 obj = obj.offsetParent;while (obj != undefined)\r\n        offsetTop += ele.offsetTop //叠加父容器的上边距\r\n        offsetLeft += ele.offsetLeft //叠加父容器的左边距\r\n      }\r\n      return { offsetTop, offsetLeft }\r\n    }\r\n\r\n    //是否显示边框线\r\n    const handleShowBorder = (node: any) => {\r\n      let white_list = [\r\n        'el-container',\r\n        'el-row',\r\n        'el-col',\r\n        'el-form',\r\n        'el-form-item',\r\n        'el-descriptions',\r\n      ]\r\n\r\n      if (white_list.includes(node.name) && store.state.show_border) {\r\n        return 'padding'\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n\r\n    const handleClick = (e: any) => {\r\n      //递归找id 这里可能点了内部的文字所以要递归找\r\n      const recursionFindNodeId: any = (e: any, level: number = 0) => {\r\n        if (e.target && e.target.id) {\r\n          return e.target.id\r\n        } else if (e.id) {\r\n          return e.id\r\n        } else if (level > 4) {\r\n          //找5层 后返回\r\n          return false\r\n        } else {\r\n          //如果是点击了内部的文字则往上找id\r\n          level++\r\n          return recursionFindNodeId(\r\n            e.target ? e.target.parentElement : e.parentElement,\r\n            level\r\n          )\r\n        }\r\n      }\r\n\r\n      let target_id = recursionFindNodeId(e)\r\n\r\n      if (e.target.className == 'el-switch__core') {\r\n        //如果是开关控件，则是找到他的兄弟节点\r\n        target_id = e.target.parentNode.children[0].id\r\n      } else if (e.target.className == 'el-select__tags') {\r\n        //如果是多选下拉框，则找到他兄弟节点的子节点\r\n        target_id = e.target.parentNode.children[1].children[0].id\r\n      }\r\n\r\n      //选中高亮区域\r\n      if (target_id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(\r\n          target_id,\r\n          data.sotre_component_tree_list\r\n        )\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 控件拖动开始 设计窗口内的控件拖动 相当于先复制一个节点 然后拖动完成后删除原节点\r\n     * @param componet 单个控件节点 包含children\r\n     */\r\n    const handleDragStart = (node: any, e: any) => {\r\n      //设置拖拽数据\r\n      e.dataTransfer.setData('node', JSON.stringify(node))\r\n      //隐藏属性栏 设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      //设置当前拖动对象\r\n      store.dispatch('handleChangeDragNodeInfo', node)\r\n    }\r\n\r\n    /**\r\n     * 设计窗口内拖拽删除旧节点方法\r\n     */\r\n    const _deleteOldNodeInfo = () => {\r\n      //判断是否是设计窗口内控件拖拽\r\n      if (Object.keys(store.state.drag_node_info).length > 0) {\r\n        //删除之前的控件\r\n        _handleRecursionDelete(\r\n          store.state.drag_node_info.id,\r\n          data.sotre_component_tree_list\r\n        )\r\n        //设置当前拖动对象\r\n        store.dispatch('handleChangeDragNodeInfo', {})\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 判断是否是设计窗口内,上拖还是下拖 还是控件栏拖入 计算插入的索引\r\n     */\r\n    const _handleCalcDragInsertIndex = (\r\n      block_node_index: number,\r\n      block_parent_node: any\r\n    ) => {\r\n      //判断是否是设计窗口内控件拖拽\r\n      if (Object.keys(store.state.drag_node_info).length > 0) {\r\n        //找到拖拽节点的位置  和 占位块索引做比较 如果是往上拖 则不需要重新计算 往下拖 则需要删除\r\n        let parent_node = _handleRecursionGetParentNode(\r\n          store.state.drag_node_info,\r\n          data.sotre_component_tree_list\r\n        )\r\n        // ps:还有一种是不是同级别的拖拽，这个时候插入索引不需要改变\r\n        if (parent_node != block_parent_node) {\r\n          return block_node_index\r\n        }\r\n        if (parent_node.children) {\r\n          //说明在内 二层及以上\r\n          parent_node = parent_node.children\r\n        }\r\n        //当前鼠标所在元素边界元素索引\r\n        let index = 0\r\n        for (let i = 0; i < parent_node.length; i++) {\r\n          const child = parent_node[i]\r\n          if (child.id == store.state.drag_node_info.id) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n        if (block_node_index - index >= 1) {\r\n          //说明占位块在拖动元素的下面\r\n          return block_node_index - 1\r\n        } else {\r\n          //在上面\r\n          return block_node_index\r\n        }\r\n      } else {\r\n        return block_node_index\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 放开拖动元素 删除占位块\r\n     */\r\n    const handleDragEnd = (e: any) => {\r\n      _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnterOnNode,\r\n      handleDragOverOnNode,\r\n      handleDropOnNode,\r\n      handleShowBorder,\r\n      handleClick,\r\n      handleDragStart,\r\n      handleDragEnd,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.padding {\r\n  padding: 20px 20px;\r\n  border: 1px dashed #cccccc;\r\n  box-sizing: border-box;\r\n}\r\n.border {\r\n  border: 1px solid $theme;\r\n}\r\n.hover-border {\r\n  border: 1px dashed $theme;\r\n}\r\n</style>","\r\nimport {\r\n  defineComponent,\r\n  reactive,\r\n  getCurrentInstance,\r\n  toRefs,\r\n  nextTick,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n\r\nexport default defineComponent({\r\n  name: 'ComponentTree',\r\n  props: {\r\n    //表格数据\r\n    component_tree_list: {\r\n      type: Array,\r\n      default: () => {\r\n        return []\r\n      },\r\n    },\r\n  },\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //当前组件实例\r\n    const { proxy } = getCurrentInstance() as any\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      sotre_component_tree_list: store.state.component_tree_list, //组件树\r\n      show_border: true, //是否显示边框线\r\n    })\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _handleRecursionGetParentNode, //递归查找父级节点\r\n      _handleRecursionGetNodeByNodeId, //递归根据节点id查找节点信息\r\n    } = mixins()\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发  console.log('6.控件进入子控件触发 handleDragEnterOnNode')\r\n    const handleDragEnterOnNode = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动时触发   console.log('7.控件进入子控件触发 handleDragOverOnNode')\r\n    const handleDragOverOnNode = (node: any, e: any) => {\r\n      //如果是在占位块上移动，则算是在他父级上移动,且占位块不发生任何变化\r\n      let parent_node: any = null\r\n\r\n      if (node.id == 'block_node') {\r\n        parent_node = _handleRecursionGetParentNode(\r\n          node,\r\n          data.sotre_component_tree_list\r\n        )\r\n        node = parent_node\r\n      }\r\n\r\n      //如果没有父级说明不是在占位块上移动，则删除占位块并重新生成\r\n      if (!parent_node) {\r\n        //删除之前的占位块\r\n        _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n        //生成一个占位块\r\n        let block_node: any = {\r\n          id: 'block_node',\r\n          title: '占位块',\r\n          name: 'el-row',\r\n          props: {},\r\n          style:\r\n            'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n        }\r\n\r\n        //插入到元素内部\r\n        if (node.children) {\r\n          //判断是否是在最外层的边界，如果在最外层的边界移动，那么插入到对应的最外层索引后\r\n          const ele = document.getElementById(node.id) as HTMLElement\r\n\r\n          //落在边界还是内部 边界的话可以换顺序 内部的话直接扔进去\r\n          let position_type = 0 //0内部 1上下边界 2左右边界\r\n          //这里>=2和<=2是为了放大边界，不然会有bug\r\n          if (\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop >=\r\n              _recursionGetOffsetTop(ele).offsetTop - 2 &&\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop <=\r\n              _recursionGetOffsetTop(ele).offsetTop + 2\r\n          ) {\r\n            //落在上下边界上\r\n            position_type = 1\r\n          } else if (\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft >=\r\n              _recursionGetOffsetTop(ele).offsetLeft - 2 &&\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft <=\r\n              _recursionGetOffsetTop(ele).offsetLeft + 2\r\n          ) {\r\n            //落在左右边界上 获取当前元素的父级\r\n            position_type = 2\r\n          } else {\r\n            //落在内部\r\n            position_type = 0\r\n          }\r\n          //根据落在哪里的类型插入元素\r\n          if (position_type == 1 || position_type == 2) {\r\n            //落在上下边界上 获取当前元素的父级\r\n            parent_node = _handleRecursionGetParentNode(\r\n              node,\r\n              data.sotre_component_tree_list\r\n            )\r\n            if (parent_node.children) {\r\n              //说明在内 二层及以上\r\n              parent_node = parent_node.children\r\n            }\r\n            //当前鼠标所在元素边界元素索引\r\n            let index = 0\r\n            for (let i = 0; i < parent_node.length; i++) {\r\n              const child = parent_node[i]\r\n              if (child.id == node.id) {\r\n                index = i\r\n                break\r\n              }\r\n            }\r\n            parent_node.splice(index, 0, block_node)\r\n          } else {\r\n            //插入到内部\r\n            node.children.push(block_node)\r\n          }\r\n        } else {\r\n          //说明是在最外层 添加占位块\r\n          node.push(block_node)\r\n        }\r\n      }\r\n    }\r\n\r\n    //当被拖动元素在节点上释放时\r\n    const handleDropOnNode = (node: any, e: any) => {\r\n      nextTick(() => {\r\n        //当前元素的父节点\r\n        let parent_node: any = null\r\n        //占位块的父节点\r\n        let block_parent_node: any = null\r\n        //是否放在内层的占位块上 占位块的索引\r\n        let block_node_index = 0\r\n        //是否放在内层的占位块上\r\n        let is_block_node_release = false\r\n        if (node.id == 'block_node') {\r\n          //如果是在占位块上释放，则算是在他父级上释放\r\n          parent_node = _handleRecursionGetParentNode(\r\n            node,\r\n            data.sotre_component_tree_list\r\n          )\r\n          //直接找到占位块释放的索引index start\r\n          is_block_node_release = true\r\n          block_parent_node = parent_node.children\r\n            ? parent_node.children\r\n            : parent_node\r\n          for (let i = 0; i < block_parent_node.length; i++) {\r\n            const child = block_parent_node[i]\r\n            if (child.id == node.id) {\r\n              block_node_index = i\r\n              //判断是否是设计窗口内上拖还是下拖 还是控件栏拖入 计算插入的索引\r\n              block_node_index = _handleCalcDragInsertIndex(\r\n                block_node_index,\r\n                parent_node\r\n              )\r\n              break\r\n            }\r\n          }\r\n          //直接找到占位块释放的index end\r\n          node = parent_node\r\n        }\r\n\r\n        //删除之前的占位块 要在找父级之后，不然占位块都没了，怎么找父级  必须要删掉 不然会闪一下\r\n        _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n\r\n        //获取拖动数据\r\n        let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n        if (is_block_node_release) {\r\n          if (parent_node.children) {\r\n            if (node.allow) {\r\n              //判断是否是自己拖到自己\r\n              if (node.id == node_info.id) {\r\n                proxy.$message({\r\n                  message: '禁止拖入自身',\r\n                  type: 'warning',\r\n                })\r\n                return false\r\n              }\r\n              //删除旧节点\r\n              _deleteOldNodeInfo()\r\n              //插入到内部\r\n              parent_node.children.splice(block_node_index, 0, node_info)\r\n            } else {\r\n              node_info = { props: {} }\r\n            }\r\n          } else {\r\n            //删除旧节点\r\n            _deleteOldNodeInfo()\r\n            //最外层\r\n            parent_node.splice(block_node_index, 0, node_info)\r\n          }\r\n\r\n          //设置当前操作对象\r\n          store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n          return\r\n        }\r\n\r\n        if (node.children) {\r\n          //判断是否是在最外层的边界，如果在最外层的边界移动，那么插入到对应的最外层索引后\r\n          const ele = document.getElementById(node.id) as HTMLElement\r\n          //落在边界还是内部 边界的话可以换顺序 内部的话直接扔进去\r\n          let position_type = 0 //0内部 1上下边界 2左右边界\r\n          //这里>=2和<=2是为了放大边界，不然会有bug\r\n          if (\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop >=\r\n              _recursionGetOffsetTop(ele).offsetTop - 2 &&\r\n            e.clientY +\r\n              (document.getElementById('desginer') as HTMLElement).scrollTop <=\r\n              _recursionGetOffsetTop(ele).offsetTop + 2\r\n          ) {\r\n            //落在上下边界上\r\n            position_type = 1\r\n          } else if (\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft >=\r\n              _recursionGetOffsetTop(ele).offsetLeft - 2 &&\r\n            e.clientX +\r\n              (document.getElementById('desginer') as HTMLElement).scrollLeft <=\r\n              _recursionGetOffsetTop(ele).offsetLeft + 2\r\n          ) {\r\n            //落在左右边界上 获取当前元素的父级\r\n            position_type = 2\r\n          } else {\r\n            //落在内部\r\n            position_type = 0\r\n          }\r\n          //同样放大边界\r\n          if (position_type == 1 || position_type == 2) {\r\n            //落在边界上 获取当前元素的父级\r\n            parent_node = _handleRecursionGetParentNode(\r\n              node,\r\n              data.sotre_component_tree_list\r\n            )\r\n            if (parent_node.children) {\r\n              //说明在内 二层及以上\r\n              parent_node = parent_node.children\r\n            }\r\n            //当前鼠标所在元素边界元素索引\r\n            let index = 0\r\n            for (let i = 0; i < parent_node.length; i++) {\r\n              const child = parent_node[i]\r\n              if (child.id == node.id) {\r\n                index = i\r\n                break\r\n              }\r\n            }\r\n            //删除旧节点\r\n            _deleteOldNodeInfo()\r\n            parent_node.splice(index, 0, node_info)\r\n          } else {\r\n            if (node.allow) {\r\n              //判断是否是自己拖到自己\r\n              if (node.id == node_info.id) {\r\n                proxy.$message({\r\n                  message: '禁止拖入自身',\r\n                  type: 'warning',\r\n                })\r\n                return false\r\n              }\r\n              //删除旧节点\r\n              _deleteOldNodeInfo()\r\n              //插入到内部\r\n              node.children.push(node_info)\r\n            } else {\r\n              node_info = { props: {} }\r\n              proxy.$message({\r\n                message: '禁止拖入',\r\n                type: 'warning',\r\n              })\r\n            }\r\n          }\r\n        } else {\r\n          //删除旧节点\r\n          _deleteOldNodeInfo()\r\n          //放入最外层数组\r\n          node.push(node_info)\r\n        }\r\n\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n      })\r\n    }\r\n\r\n    //递归获取当前元素距离最外层父元素的距离\r\n    const _recursionGetOffsetTop = (ele: any) => {\r\n      let offsetTop = ele.offsetTop //获取该元素对应父容器的上边距\r\n      let offsetLeft = ele.offsetLeft //对应父容器的上边距\r\n      //判断是否有父容器，如果存在则累加其边距\r\n      while ((ele = ele.offsetParent)) {\r\n        //等效 obj = obj.offsetParent;while (obj != undefined)\r\n        offsetTop += ele.offsetTop //叠加父容器的上边距\r\n        offsetLeft += ele.offsetLeft //叠加父容器的左边距\r\n      }\r\n      return { offsetTop, offsetLeft }\r\n    }\r\n\r\n    //是否显示边框线\r\n    const handleShowBorder = (node: any) => {\r\n      let white_list = [\r\n        'el-container',\r\n        'el-row',\r\n        'el-col',\r\n        'el-form',\r\n        'el-form-item',\r\n        'el-descriptions',\r\n      ]\r\n\r\n      if (white_list.includes(node.name) && store.state.show_border) {\r\n        return 'padding'\r\n      } else {\r\n        return ''\r\n      }\r\n    }\r\n\r\n    const handleClick = (e: any) => {\r\n      //递归找id 这里可能点了内部的文字所以要递归找\r\n      const recursionFindNodeId: any = (e: any, level: number = 0) => {\r\n        if (e.target && e.target.id) {\r\n          return e.target.id\r\n        } else if (e.id) {\r\n          return e.id\r\n        } else if (level > 4) {\r\n          //找5层 后返回\r\n          return false\r\n        } else {\r\n          //如果是点击了内部的文字则往上找id\r\n          level++\r\n          return recursionFindNodeId(\r\n            e.target ? e.target.parentElement : e.parentElement,\r\n            level\r\n          )\r\n        }\r\n      }\r\n\r\n      let target_id = recursionFindNodeId(e)\r\n\r\n      if (e.target.className == 'el-switch__core') {\r\n        //如果是开关控件，则是找到他的兄弟节点\r\n        target_id = e.target.parentNode.children[0].id\r\n      } else if (e.target.className == 'el-select__tags') {\r\n        //如果是多选下拉框，则找到他兄弟节点的子节点\r\n        target_id = e.target.parentNode.children[1].children[0].id\r\n      }\r\n\r\n      //选中高亮区域\r\n      if (target_id) {\r\n        let node_info: any = _handleRecursionGetNodeByNodeId(\r\n          target_id,\r\n          data.sotre_component_tree_list\r\n        )\r\n        //设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //高亮控件边框\r\n        let node_element = document.getElementById(\r\n          store.state.current_node_info.id\r\n        ) as HTMLElement\r\n        if (node_element) {\r\n          node_element.className = node_element.className + ' border'\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 控件拖动开始 设计窗口内的控件拖动 相当于先复制一个节点 然后拖动完成后删除原节点\r\n     * @param componet 单个控件节点 包含children\r\n     */\r\n    const handleDragStart = (node: any, e: any) => {\r\n      //设置拖拽数据\r\n      e.dataTransfer.setData('node', JSON.stringify(node))\r\n      //隐藏属性栏 设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      //设置当前拖动对象\r\n      store.dispatch('handleChangeDragNodeInfo', node)\r\n    }\r\n\r\n    /**\r\n     * 设计窗口内拖拽删除旧节点方法\r\n     */\r\n    const _deleteOldNodeInfo = () => {\r\n      //判断是否是设计窗口内控件拖拽\r\n      if (Object.keys(store.state.drag_node_info).length > 0) {\r\n        //删除之前的控件\r\n        _handleRecursionDelete(\r\n          store.state.drag_node_info.id,\r\n          data.sotre_component_tree_list\r\n        )\r\n        //设置当前拖动对象\r\n        store.dispatch('handleChangeDragNodeInfo', {})\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 判断是否是设计窗口内,上拖还是下拖 还是控件栏拖入 计算插入的索引\r\n     */\r\n    const _handleCalcDragInsertIndex = (\r\n      block_node_index: number,\r\n      block_parent_node: any\r\n    ) => {\r\n      //判断是否是设计窗口内控件拖拽\r\n      if (Object.keys(store.state.drag_node_info).length > 0) {\r\n        //找到拖拽节点的位置  和 占位块索引做比较 如果是往上拖 则不需要重新计算 往下拖 则需要删除\r\n        let parent_node = _handleRecursionGetParentNode(\r\n          store.state.drag_node_info,\r\n          data.sotre_component_tree_list\r\n        )\r\n        // ps:还有一种是不是同级别的拖拽，这个时候插入索引不需要改变\r\n        if (parent_node != block_parent_node) {\r\n          return block_node_index\r\n        }\r\n        if (parent_node.children) {\r\n          //说明在内 二层及以上\r\n          parent_node = parent_node.children\r\n        }\r\n        //当前鼠标所在元素边界元素索引\r\n        let index = 0\r\n        for (let i = 0; i < parent_node.length; i++) {\r\n          const child = parent_node[i]\r\n          if (child.id == store.state.drag_node_info.id) {\r\n            index = i\r\n            break\r\n          }\r\n        }\r\n        if (block_node_index - index >= 1) {\r\n          //说明占位块在拖动元素的下面\r\n          return block_node_index - 1\r\n        } else {\r\n          //在上面\r\n          return block_node_index\r\n        }\r\n      } else {\r\n        return block_node_index\r\n      }\r\n    }\r\n\r\n    /**\r\n     * 放开拖动元素 删除占位块\r\n     */\r\n    const handleDragEnd = (e: any) => {\r\n      _handleRecursionDelete('block_node', data.sotre_component_tree_list)\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnterOnNode,\r\n      handleDragOverOnNode,\r\n      handleDropOnNode,\r\n      handleShowBorder,\r\n      handleClick,\r\n      handleDragStart,\r\n      handleDragEnd,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./ComponentTree.vue?vue&type=template&id=28bebbed&scoped=true\"\nimport script from \"./ComponentTree.vue?vue&type=script&lang=ts\"\nexport * from \"./ComponentTree.vue?vue&type=script&lang=ts\"\n\nimport \"./ComponentTree.vue?vue&type=style&index=0&id=28bebbed&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-28bebbed\"\n\nexport default script","<template>\r\n  <el-alert v-if=\"show_tips\" title=\"测试版本v1.0.0上线啦\" type=\"success\"></el-alert>\r\n  <el-row class=\"tool-bar\" justify=\"space-between\">\r\n    <el-col :span=\"20\">{{title}}</el-col>\r\n    <el-col :xs=\"4\" :sm=\"4\" :md=\"4\" :lg=\"4\">\r\n      <el-row justify=\"end\">\r\n        <el-col :span=\"6\">\r\n          <!--  设计窗口 -->\r\n          <el-tooltip effect=\"dark\" content=\"设计窗口/切换显示边框\" placement=\"bottom\">\r\n            <svg-icon name=\"layout\" className=\"icon\" @click=\"handleClickToolBtn(1)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <!--  查看代码 -->\r\n          <el-tooltip effect=\"dark\" content=\"查看代码\" placement=\"bottom\">\r\n            <svg-icon name=\"source_code\" className=\"icon\" @click=\"handleClickToolBtn(2)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <!--  清空布局 -->\r\n          <el-tooltip effect=\"dark\" content=\"清空布局\" placement=\"bottom\">\r\n            <svg-icon name=\"clear_layout\" className=\"icon\" @click=\"handleClickToolBtn(3)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n        <el-col :span=\"6\">\r\n          <!--  删除控件 -->\r\n          <el-tooltip effect=\"dark\" content=\"删除控件 DELETE\" placement=\"bottom\">\r\n            <svg-icon name=\"delete\" className=\"icon\" @click=\"handleClickToolBtn(4)\" />\r\n          </el-tooltip>\r\n        </el-col>\r\n      </el-row>\r\n    </el-col>\r\n  </el-row>\r\n</template>\r\n<script lang=\"ts\">\r\nimport { defineComponent, reactive, toRefs, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default defineComponent({\r\n  name: 'ToolBar',\r\n  //组件发出的事件需要定义\r\n  emits: ['handleChangeDesigner', 'handleClearLayout', 'handleDeleteControl'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      title: '设计窗口', //工具栏标题\r\n      show_tips: true, //是否显示提示消息\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      setTimeout(() => {\r\n        data.show_tips = false //隐藏提示消息\r\n      }, 3000)\r\n    })\r\n\r\n    //点击工具栏按钮\r\n    const handleClickToolBtn = (val: number) => {\r\n      switch (val) {\r\n        case 1:\r\n          //原地切换改变显示边框状态\r\n          if (data.title == '设计窗口') {\r\n            store.dispatch('handleChangeShowBorder', !store.state.show_border)\r\n          }\r\n          data.title = '设计窗口'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 2:\r\n          data.title = '查看代码'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 3:\r\n          if (data.title == '设计窗口') {\r\n            //清空布局\r\n            emit('handleClearLayout', val)\r\n          }\r\n          break\r\n        case 4:\r\n          if (data.title == '设计窗口') {\r\n            //删除控件\r\n            emit('handleDeleteControl', val)\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleClickToolBtn,\r\n    }\r\n  },\r\n})\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.tool-bar {\r\n  padding: 10px 20px;\r\n  background: $bg;\r\n  color: $h2c;\r\n}\r\n.icon {\r\n  -webkit-app-region: no-drag;\r\n  width: 20px;\r\n  height: 20px;\r\n  fill: $h3c;\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    fill: $h1c;\r\n  }\r\n}\r\n</style>","\r\nimport { defineComponent, reactive, toRefs, onMounted } from 'vue'\r\nimport { useStore } from 'vuex'\r\n\r\nexport default defineComponent({\r\n  name: 'ToolBar',\r\n  //组件发出的事件需要定义\r\n  emits: ['handleChangeDesigner', 'handleClearLayout', 'handleDeleteControl'],\r\n  setup(props, { emit }) {\r\n    const store = useStore()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      title: '设计窗口', //工具栏标题\r\n      show_tips: true, //是否显示提示消息\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      setTimeout(() => {\r\n        data.show_tips = false //隐藏提示消息\r\n      }, 3000)\r\n    })\r\n\r\n    //点击工具栏按钮\r\n    const handleClickToolBtn = (val: number) => {\r\n      switch (val) {\r\n        case 1:\r\n          //原地切换改变显示边框状态\r\n          if (data.title == '设计窗口') {\r\n            store.dispatch('handleChangeShowBorder', !store.state.show_border)\r\n          }\r\n          data.title = '设计窗口'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 2:\r\n          data.title = '查看代码'\r\n          emit('handleChangeDesigner', val)\r\n          break\r\n        case 3:\r\n          if (data.title == '设计窗口') {\r\n            //清空布局\r\n            emit('handleClearLayout', val)\r\n          }\r\n          break\r\n        case 4:\r\n          if (data.title == '设计窗口') {\r\n            //删除控件\r\n            emit('handleDeleteControl', val)\r\n          }\r\n          break\r\n        default:\r\n          break\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleClickToolBtn,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./ToolBar.vue?vue&type=template&id=1305f1ea&scoped=true\"\nimport script from \"./ToolBar.vue?vue&type=script&lang=ts\"\nexport * from \"./ToolBar.vue?vue&type=script&lang=ts\"\n\nimport \"./ToolBar.vue?vue&type=style&index=0&id=1305f1ea&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1305f1ea\"\n\nexport default script","\r\nimport {\r\n  defineComponent,\r\n  reactive,\r\n  toRefs,\r\n  nextTick,\r\n  onMounted,\r\n  ref,\r\n} from 'vue'\r\nimport { useStore } from 'vuex'\r\n//导入公共方法\r\nimport mixins from '@/mixins/index'\r\n//导入递归组件树\r\nimport ComponentTree from '@/components/ComponentTree.vue'\r\n//导入工具栏\r\nimport ToolBar from '@/components/ToolBar.vue'\r\nimport store from '@/store'\r\n\r\nexport default defineComponent({\r\n  name: 'Designer',\r\n  components: {\r\n    ComponentTree,\r\n    ToolBar,\r\n  },\r\n  setup() {\r\n    const store = useStore()\r\n\r\n    const {\r\n      _handleRecursionDelete, //递归删除旧的占位块\r\n      _generateCode, //递归生成代码\r\n    } = mixins()\r\n\r\n    //数据对象\r\n    let data: any = reactive({\r\n      tab_index: 1, //页面内容 1界面设计 2查看代码\r\n      component_tree_list: store.state.component_tree_list, //组件树\r\n      insert_index: 0, //当前控件插入位置索引\r\n      code: '', //根据组件树生成的代码\r\n    })\r\n\r\n    //挂载事件\r\n    onMounted(() => {\r\n      //监听 键盘按下事件\r\n      document.onkeydown = function (event: any) {\r\n        var e = event || window.event || arguments.callee.caller.arguments[0]\r\n\r\n        if (e && e.keyCode == 46) {\r\n          // 按下DELETE 删除控件\r\n          handleDeleteControl()\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 67) {\r\n          //ctrl+c 复制节点\r\n          //判断是否是浏览器默认快捷键 原理：判断是否选中了内容\r\n          let content = (<any>window).getSelection().toString()\r\n          if (!content) {\r\n            //不是系统快捷键\r\n            //复制控件\r\n            handleCopyControl()\r\n            e.preventDefault()\r\n          }\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 88) {\r\n          //ctrl+x 剪切节点 先复制后删除\r\n          //判断是否是浏览器默认快捷键 原理：判断是否选中了内容\r\n          let content = (<any>window).getSelection().toString()\r\n          if (!content) {\r\n            //不是系统快捷键\r\n            handleCopyControl()\r\n            handleDeleteControl()\r\n          }\r\n        }\r\n\r\n        if (e.ctrlKey && e.keyCode == 86) {\r\n          //ctrl+v 粘贴节点\r\n          if (\r\n            (document.activeElement as HTMLElement).tagName != 'INPUT' &&\r\n            (document.activeElement as HTMLElement).tagName != 'TEXTAREA'\r\n          ) {\r\n            handlePasteControl()\r\n            e.preventDefault()\r\n          }\r\n        }\r\n      }\r\n    })\r\n\r\n    //被拖动元素进入到释放区所占据得屏幕空间时触发 console.log('2.控件进入最外层主窗口触发 handleDragEnter')\r\n    const handleDragEnter = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区内移动或停留时触发 console.log('3.控件在最外层主窗口移动或停留时触发 handleDragOver')\r\n    const handleDragOver = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      let flag_position = false //有没有找到元素所在位置标志\r\n      let mouse_absolute__y =\r\n        e.clientY +\r\n        (document.getElementById('desginer') as HTMLElement).scrollTop //鼠标在设计窗口的绝对位置\r\n\r\n      //循环第一层的元素 判断该当前鼠标位置在对应水平线元素的中线上面还是下面，上面就在上面插入占位块，下面就在下面插入占位块\r\n      for (let i = 0; i < data.component_tree_list.length; i++) {\r\n        const node = data.component_tree_list[i]\r\n        const ele = document.getElementById(node.id) as HTMLElement\r\n        if (i == 0 && mouse_absolute__y < ele.offsetTop) {\r\n          //在第一个的上面，插入到最前面\r\n          flag_position = true\r\n          data.insert_index = 0\r\n          break\r\n        } else if (mouse_absolute__y < ele.offsetTop + ele.offsetHeight / 2) {\r\n          //在当前元素的水平中线上面\r\n          flag_position = true\r\n          data.insert_index = i\r\n          break\r\n        } else if (i == data.component_tree_list.length - 1 && !flag_position) {\r\n          //在最后一个的下面，插入的最后面\r\n          data.insert_index = i + 1\r\n          break\r\n        }\r\n      }\r\n\r\n      //递归删除所有占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //生成一个占位块\r\n      let block_node: any = {\r\n        id: 'block_node',\r\n        title: '',\r\n        name: 'el-row',\r\n        props: {},\r\n        style:\r\n          'flex-grow: 1;height:100%;max-height:80px;border:1px dashed #cccccc;box-sizing:border-box;background:#fafafa;',\r\n      }\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, block_node)\r\n    }\r\n\r\n    //当被拖动元素没有放下就离开释放区时触发       console.log('4.控件移出最外层主窗口触发 handleDragLeave')\r\n    const handleDragLeave = (e: any) => {}\r\n\r\n    //当被拖动元素在释放区里放下时触发       console.log('5.控件在最外层释放区放下 handleDrop')\r\n    const handleDrop = (e: any) => {\r\n      e.preventDefault()\r\n\r\n      //删除占位块\r\n      _handleRecursionDelete('block_node', data.component_tree_list)\r\n\r\n      //获取拖动数据\r\n      let node_info: any = JSON.parse(e.dataTransfer.getData('node'))\r\n\r\n      //删除旧节点\r\n      _deleteOldNodeInfo()\r\n\r\n      //插入到指定位置\r\n      data.component_tree_list.splice(data.insert_index, 0, node_info)\r\n\r\n      //设置当前操作对象\r\n      store.dispatch('handleChangeCurrentNodeInfo', node_info)\r\n    }\r\n\r\n    //点击main\r\n    const handleClick = (e: any) => {\r\n      //点击空白区域\r\n      if (e.target.className == 'el-main') {\r\n        //清除高亮边框\r\n        let border = document.getElementsByClassName('border')[0] as HTMLElement\r\n        if (border) {\r\n          border.className = border.className.replace(' border', '')\r\n        }\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //改变主设计窗口显示内容\r\n    const handleChangeDesigner = (val: number) => {\r\n      //切换显示内容索引\r\n      data.tab_index = val\r\n\r\n      if (val == 2) {\r\n        //隐藏属性栏 设置当前操作对象 暂时先隐藏\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n        //递归生成代码\r\n        data.code = _generateCode(store.state.component_tree_list)\r\n      }\r\n    }\r\n\r\n    //清空布局\r\n    const handleClearLayout = () => {\r\n      store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n\r\n      //这里主要响应对象不能直接赋值[] 会使其响应性失效\r\n      data.component_tree_list.splice(0, data.component_tree_list.length)\r\n    }\r\n\r\n    //删除控件\r\n    const handleDeleteControl = () => {\r\n      if (store.state.current_node_info.id) {\r\n        //递归删除节点及其子节点\r\n        _handleRecursionDelete(\r\n          store.state.current_node_info.id,\r\n          data.component_tree_list\r\n        )\r\n        //隐藏属性栏 设置当前操作对象\r\n        store.dispatch('handleChangeCurrentNodeInfo', { props: {} })\r\n      }\r\n    }\r\n\r\n    //复制控件\r\n    const handleCopyControl = () => {\r\n      if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n        //如果当前选中节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.current_node_info)\r\n        )\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n      }\r\n    }\r\n\r\n    const handlePasteControl = () => {\r\n      if (Object.keys(store.state.copy_node_info).length > 0) {\r\n        //如果有复制节点\r\n        let copy_node_info = JSON.parse(\r\n          JSON.stringify(store.state.copy_node_info)\r\n        )\r\n        //白名单 只要在这里面的节点 循环的时候子级的id和父级的相同即可 这样选中子级的时候就等同于选择了父级\r\n        let white_list = [\r\n          'el-radio-group',\r\n          'el-checkbox-group',\r\n          'el-select',\r\n          'el-descriptions',\r\n        ]\r\n        //递归所有children重新生成id方法\r\n        let recursionGenerateNode = (node: any, level: number = 0) => {\r\n          node.id = 'node-' + new Date().getTime() + level\r\n          if (node.children && node.children.length > 0) {\r\n            node.children.forEach((element: any) => {\r\n              if (!white_list.includes(node.name)) {\r\n                //不在白名单里的控件id需要加1\r\n                level++\r\n              }\r\n              recursionGenerateNode(element, level)\r\n              //循环完成还得增加以下，不然这次循环和上次循环的id一样了\r\n              level++\r\n            })\r\n          }\r\n          return node\r\n        }\r\n        copy_node_info = recursionGenerateNode(copy_node_info) //递归所有children重新生成id，保证粘贴的都是不一样的元素，不然粘贴的元素就和前面的一样啦\r\n        store.dispatch('handleChangeCopyNodeInfo', copy_node_info)\r\n        if (Object.keys(store.state.current_node_info.props).length > 0) {\r\n          //放到选中的控件children中\r\n          store.state.current_node_info.children.push(\r\n            store.state.copy_node_info\r\n          )\r\n        } else {\r\n          //放到最外层\r\n          store.state.component_tree_list.push(store.state.copy_node_info)\r\n        }\r\n      }\r\n    }\r\n\r\n    //设计窗口内拖拽删除旧节点方法\r\n    const _deleteOldNodeInfo = () => {\r\n      //判断是否是设计窗口内控件拖拽\r\n      if (Object.keys(store.state.drag_node_info).length > 0) {\r\n        //删除之前的控件\r\n        _handleRecursionDelete(\r\n          store.state.drag_node_info.id,\r\n          data.component_tree_list\r\n        )\r\n        //设置当前拖动对象\r\n        store.dispatch('handleChangeDragNodeInfo', {})\r\n      }\r\n    }\r\n\r\n    return {\r\n      ...toRefs(data),\r\n      handleDragEnter,\r\n      handleDragOver,\r\n      handleDragLeave,\r\n      handleDrop,\r\n      handleClick,\r\n      handleChangeDesigner,\r\n      handleClearLayout,\r\n      handleDeleteControl,\r\n      handleCopyControl,\r\n      handlePasteControl,\r\n    }\r\n  },\r\n})\r\n","import { render } from \"./Designer.vue?vue&type=template&id=b27232f6\"\nimport script from \"./Designer.vue?vue&type=script&lang=ts\"\nexport * from \"./Designer.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\r\nimport { defineComponent } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport ControlBar from '@/components/ControlBar.vue'\r\nimport AttributeBar from '@/components/AttributeBar.vue'\r\nimport Designer from '@/components/Designer.vue'\r\n\r\nexport default defineComponent({\r\n  components: {\r\n    ControlBar,\r\n    AttributeBar,\r\n    Designer,\r\n  },\r\n  setup() {\r\n    //定义router\r\n    const router = useRouter()\r\n    const route = useRoute()\r\n\r\n    return { router, route }\r\n  },\r\n})\r\n","import { render } from \"./Index.vue?vue&type=template&id=1a1d33dc&scoped=true\"\nimport script from \"./Index.vue?vue&type=script&lang=ts\"\nexport * from \"./Index.vue?vue&type=script&lang=ts\"\n\nimport \"./Index.vue?vue&type=style&index=0&id=1a1d33dc&lang=scss&scoped=true\"\nscript.render = render\nscript.__scopeId = \"data-v-1a1d33dc\"\n\nexport default script","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./ToolBar.vue?vue&type=style&index=0&id=1305f1ea&lang=scss&scoped=true\""],"sourceRoot":""}